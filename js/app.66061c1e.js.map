{"version":3,"file":"js/app.66061c1e.js","mappings":"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","sources":["webpack://novatool_claude/./src/App.vue","webpack://novatool_claude/./src/App.vue?7ccd","webpack://novatool_claude/./src/components/ImageConverter.vue","webpack://novatool_claude/./src/components/ImageConverter.vue?f286","webpack://novatool_claude/./src/components/BinaryViewer.vue","webpack://novatool_claude/./src/components/BinaryViewer.vue?3df4","webpack://novatool_claude/./src/router/index.js","webpack://novatool_claude/./src/main.js","webpack://novatool_claude/webpack/bootstrap","webpack://novatool_claude/webpack/runtime/chunk loaded","webpack://novatool_claude/webpack/runtime/compat get default export","webpack://novatool_claude/webpack/runtime/define property getters","webpack://novatool_claude/webpack/runtime/global","webpack://novatool_claude/webpack/runtime/hasOwnProperty shorthand","webpack://novatool_claude/webpack/runtime/publicPath","webpack://novatool_claude/webpack/runtime/jsonp chunk loading","webpack://novatool_claude/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header class=\"main-header\">\n      <div class=\"header-content\">\n        <img src=\"@/assets/logo_novatool2.png\" alt=\"Novatool Logo\" class=\"logo\" />\n        <nav class=\"main-nav\">\n          <router-link to=\"/\" class=\"nav-link\">Image Converter</router-link>\n          <router-link to=\"/binary-viewer\" class=\"nav-link\">Binary Viewer</router-link>\n        </nav>\n      </div>\n    </header>\n    <main class=\"main-content\">\n      <router-view></router-view>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style scoped>\n.app {\n  min-height: 100vh;\n  background-color: #faf7f2;\n}\n\n.main-header {\n  background-color: #ffffff;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 10px 0;\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n}\n\n.logo {\n  height: 50px;\n  width: auto;\n}\n\n.main-nav {\n  display: flex;\n  gap: 20px;\n}\n\n.nav-link {\n  color: #5c4d3d;\n  text-decoration: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.nav-link:hover {\n  background-color: #f5f1ea;\n}\n\n.router-link-active {\n  background-color: #f5f1ea;\n  font-weight: bold;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=f094a4e6&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=f094a4e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f094a4e6\"]])\n\nexport default __exports__","// App.vue\n<template>\n  <div class=\"container\">\n    <div class=\"image-converter\">\n      <div class=\"upload-section\">\n        <input type=\"file\" accept=\"image/*\" @change=\"onFileSelected\" ref=\"fileInput\">\n        <button @click=\"$refs.fileInput.click()\">Select Image</button>\n      </div>\n      \n      <div v-if=\"imageLoaded\" class=\"preview-section\">\n        <h3>Preview</h3>\n        <div class=\"image-preview\">\n          <div class=\"preview-container\">\n            <img class=\"checkerboard\" :src=\"imagePreview\" alt=\"미리보기\" :style=\"{ objectFit: 'contain' }\" />\n            <div class=\"image-info\">\n              {{ imageWidth }} X {{ imageHeight }}\n            </div>\n          </div>\n          \n        </div>\n        \n        <div class=\"conversion-options\">\n          <h3>Conversion Options</h3>\n          <div class=\"format-selection\">\n            <div class=\"option-row\">\n              <div class=\"option-label\">\n                <h3>Color Format</h3>\n              </div>\n              <div class=\"option-control\">\n                <div class=\"select-wrapper\">\n                  <select v-model=\"format\">\n                    <optgroup label=\"32-bit Format (8888)\">\n                      <option value=\"rgba8888\">RGBA8888</option>\n                      <option value=\"argb8888\">ARGB8888</option>\n                      <option value=\"bgra8888\">BGRA8888</option>\n                      <option value=\"abgr8888\">ABGR8888</option>\n                    </optgroup>\n                    <optgroup label=\"16-bit Format (4444)\">\n                      <option value=\"rgba4444\">RGBA4444</option>\n                      <option value=\"argb4444\">ARGB4444</option>\n                      <option value=\"bgra4444\">BGRA4444</option>\n                      <option value=\"abgr4444\">ABGR4444</option>\n                    </optgroup>\n                    <optgroup label=\"16-bit Format (565)\">\n                      <option value=\"rgb565\">RGB565</option>\n                      <option value=\"bgr565\">BGR565</option>\n                    </optgroup>\n                  </select>\n                </div>\n                <div class=\"color-legend-item\">\n                  <div class=\"color-legend\" :class=\"getLegendClass\">\n                    <template v-for=\"channel in getChannelOrder\" :key=\"channel\">\n                      <span :style=\"getChannelStyle(channel)\">{{ channel }}</span>\n                    </template>\n                  </div>\n                  <span class=\"legend-description\">{{ getFormatDescription }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"output-selection\">\n          <div class=\"option-row\">\n            <div class=\"option-label\">\n              <h3>Output Format</h3>\n            </div>\n            <div class=\"option-control\">\n              <div class=\"select-wrapper\">\n                <select v-model=\"outputType\">\n                  <option value=\"binary\">Binary</option>\n                  <option value=\"c-array\">C Array</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n        \n        \n        \n        <button @click=\"convertImage\">Convert</button>\n      </div>\n      \n      <div v-if=\"convertedSize\" class=\"conversion-info\">\n        <p>Converted File Size: {{ (convertedSize / 1024).toFixed(2) }} KB</p>\n        <p>Compression Ratio: {{ getCompressionRatio() }}%</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      imageLoaded: false,\n      imagePreview: '',\n      imageData: null,\n      imageWidth: 0,\n      imageHeight: 0,\n      format: 'rgba8888',\n      outputType: 'binary',\n      convertedSize: 0\n    }\n  },\n  computed: {\n    getLegendClass() {\n      return this.format.split(/\\d+/)[0];\n    },\n    getChannelOrder() {\n      const format = this.format.toLowerCase();\n      if (format.includes('565')) {\n        return format.startsWith('rgb') ? ['R', 'G', 'B'] : ['B', 'G', 'R'];\n      }\n      return format.split(/\\d+/)[0].toUpperCase().split('');\n    },\n    getFormatDescription() {\n      if (this.format.includes('8888')) {\n        return '32-bit (Each channel 8-bit)';\n      } else if (this.format.includes('4444')) {\n        return '16-bit (Each channel 4-bit)';\n      } else {\n        return '16-bit (R:5, G:6, B:5)';\n      }\n    }\n  },\n  methods: {\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePreview = e.target.result;\n        this.loadImageData(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    },\n    \n    loadImageData(src) {\n      const img = new Image();\n      img.onload = () => {\n        this.imageWidth = img.width;\n        this.imageHeight = img.height;\n        \n        const canvas = document.createElement('canvas');\n        canvas.width = img.width;\n        canvas.height = img.height;\n        \n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0);\n        \n        this.imageData = ctx.getImageData(0, 0, img.width, img.height).data;\n        this.imageLoaded = true;\n      };\n      img.src = src;\n    },\n    \n    convertImage() {\n      if (!this.imageData) return;\n      \n      let result;\n      \n      // 형식별 변환 처리\n      if (this.format.endsWith('8888')) {\n        result = this.convertTo8888Format(this.format);\n      } else if (this.format.endsWith('4444')) {\n        result = this.convertTo4444Format(this.format);\n      } else if (this.format.endsWith('565')) {\n        result = this.convertTo565Format(this.format);\n      }\n      \n      this.convertedSize = result.length;\n      \n      // 출력 형식에 따른 다운로드\n      if (this.outputType === 'binary') {\n        this.downloadBinary(result);\n      } else {\n        this.downloadCArray(result);\n      }\n    },\n    \n    convertTo8888Format(format) {\n      const length = this.imageData.length / 4;\n      const result = new Uint8Array(this.imageData.length);\n      \n      for (let i = 0; i < length; i++) {\n        const r = this.imageData[i * 4];     // Red\n        const g = this.imageData[i * 4 + 1]; // Green\n        const b = this.imageData[i * 4 + 2]; // Blue\n        const a = this.imageData[i * 4 + 3]; // Alpha\n        \n        const pixelOffset = i * 4;\n        \n        // 포맷별 바이트 순서 배치\n        switch (format) {\n          case 'rgba8888':\n            result[pixelOffset] = r;\n            result[pixelOffset + 1] = g;\n            result[pixelOffset + 2] = b;\n            result[pixelOffset + 3] = a;\n            break;\n          case 'argb8888':\n            result[pixelOffset] = a;\n            result[pixelOffset + 1] = r;\n            result[pixelOffset + 2] = g;\n            result[pixelOffset + 3] = b;\n            break;\n          case 'bgra8888':\n            result[pixelOffset] = b;\n            result[pixelOffset + 1] = g;\n            result[pixelOffset + 2] = r;\n            result[pixelOffset + 3] = a;\n            break;\n          case 'abgr8888':\n            result[pixelOffset] = a;\n            result[pixelOffset + 1] = b;\n            result[pixelOffset + 2] = g;\n            result[pixelOffset + 3] = r;\n            break;\n        }\n      }\n      \n      return result;\n    },\n    \n    convertTo4444Format(format) {\n      const length = this.imageData.length / 4;\n      const result = new Uint8Array(length * 2); // 각 픽셀당 2바이트\n      \n      for (let i = 0; i < length; i++) {\n        const r = Math.floor(this.imageData[i * 4] / 16);       // Red: 0-15\n        const g = Math.floor(this.imageData[i * 4 + 1] / 16);   // Green: 0-15\n        const b = Math.floor(this.imageData[i * 4 + 2] / 16);   // Blue: 0-15\n        const a = Math.floor(this.imageData[i * 4 + 3] / 16);   // Alpha: 0-15\n        \n        const pixelOffset = i * 2;\n        \n        // 포맷별 4비트 값 패킹\n        switch (format) {\n          case 'rgba4444':\n            result[pixelOffset] = (r << 4) | g;\n            result[pixelOffset + 1] = (b << 4) | a;\n            break;\n          case 'argb4444':\n            result[pixelOffset] = (a << 4) | r;\n            result[pixelOffset + 1] = (g << 4) | b;\n            break;\n          case 'bgra4444':\n            result[pixelOffset] = (b << 4) | g;\n            result[pixelOffset + 1] = (r << 4) | a;\n            break;\n          case 'abgr4444':\n            result[pixelOffset] = (a << 4) | b;\n            result[pixelOffset + 1] = (g << 4) | r;\n            break;\n        }\n      }\n      \n      return result;\n    },\n    \n    convertTo565Format(format) {\n      const length = this.imageData.length / 4;\n      const result = new Uint8Array(length * 2); // 각 픽셀당 2바이트\n      \n      for (let i = 0; i < length; i++) {\n        // 원본 0-255 값을 비트 수에 맞게 변환\n        // R: 5비트 (0-31), G: 6비트 (0-63), B: 5비트 (0-31)\n        const r = Math.floor(this.imageData[i * 4] / 255 * 31);      // Red: 0-31\n        const g = Math.floor(this.imageData[i * 4 + 1] / 255 * 63);  // Green: 0-63\n        const b = Math.floor(this.imageData[i * 4 + 2] / 255 * 31);  // Blue: 0-31\n        \n        const pixelOffset = i * 2;\n        \n        // RGB565는 16비트 색상 형식으로 다음과 같이 구성됩니다.\n        // RRRRRGGGGGGBBBBB (R: 5비트, G: 6비트, B: 5비트)\n        let pixel16bit;\n        \n        if (format === 'rgb565') {\n          // RGB565: R(5비트) | G(6비트) | B(5비트)\n          pixel16bit = (r << 11) | (g << 5) | b;\n        } else { // BGR565\n          // BGR565: B(5비트) | G(6비트) | R(5비트)\n          pixel16bit = (b << 11) | (g << 5) | r;\n        }\n        \n        // 16비트 값을 2개의 바이트로 저장 (리틀 엔디안)\n        result[pixelOffset] = pixel16bit & 0xFF;         // 하위 8비트\n        result[pixelOffset + 1] = (pixel16bit >> 8) & 0xFF; // 상위 8비트\n      }\n      \n      return result;\n    },\n    \n    downloadBinary(data) {\n      const blob = new Blob([data], { type: 'application/octet-stream' });\n      const url = URL.createObjectURL(blob);\n      const filename = `image_${this.format}_${this.imageWidth}x${this.imageHeight}.bin`;\n      \n      this.triggerDownload(url, filename);\n    },\n    \n    downloadCArray(data) {\n      let cCode = `// ${this.format} 이미지 데이터 - ${this.imageWidth}x${this.imageHeight}\\n`;\n      \n      // 각 형식에 대한 설명 추가\n      if (this.format.includes('rgba')) {\n        cCode += '// Byte order: Red, Green, Blue, Alpha\\n';\n      } else if (this.format.includes('argb')) {\n        cCode += '// Byte order: Alpha, Red, Green, Blue\\n';\n      } else if (this.format.includes('bgra')) {\n        cCode += '// Byte order: Blue, Green, Red, Alpha\\n';\n      } else if (this.format.includes('abgr')) {\n        cCode += '// Byte order: Alpha, Blue, Green, Red\\n';\n      } else if (this.format === 'rgb565') {\n        cCode += '// RGB565 Format: 16-bit (RRRRRGGGGGGBBBBB)\\n';\n        cCode += '// Little-endian byte order: Lower 8-bit, Upper 8-bit\\n';\n      } else if (this.format === 'bgr565') {\n        cCode += '// BGR565 Format: 16-bit (BBBBBGGGGGGRRRRR)\\n';\n        cCode += '// Little-endian byte order: Lower 8-bit, Upper 8-bit\\n';\n      }\n      \n      // 4444 형식인 경우 패킹 설명 추가\n      if (this.format.includes('4444')) {\n        cCode += '// 4-bit packing format: Each byte contains two 4-bit color values\\n';\n      }\n      \n      cCode += `const unsigned char imageData[${data.length}] = {\\n`;\n      \n      const bytesPerLine = 12;\n      for (let i = 0; i < data.length; i += bytesPerLine) {\n        cCode += '    ';\n        for (let j = 0; j < bytesPerLine && i + j < data.length; j++) {\n          cCode += `0x${data[i + j].toString(16).padStart(2, '0')}`;\n          if (i + j < data.length - 1) {\n            cCode += ', ';\n          }\n        }\n        cCode += '\\n';\n      }\n      \n      cCode += '};\\n\\n';\n      cCode += `const int imageWidth = ${this.imageWidth};\\n`;\n      cCode += `const int imageHeight = ${this.imageHeight};\\n`;\n      cCode += `const char* format = \"${this.format}\";\\n`;\n      \n      // 565 형식인 경우 샘플 코드 추가\n      if (this.format.includes('565')) {\n        cCode += `\\n// Example function to extract 16-bit pixel values for ${this.format} format\\n`;\n        cCode += `uint16_t getPixel(int x, int y) {\\n`;\n        cCode += `    if (x < 0 || x >= imageWidth || y < 0 || y >= imageHeight) return 0;\\n`;\n        cCode += `    int offset = (y * imageWidth + x) * 2; // Each pixel is 2 bytes\\n`;\n        cCode += `    return (uint16_t)(imageData[offset] | (imageData[offset + 1] << 8));\\n`;\n        cCode += `}\\n\\n`;\n        \n        cCode += `// Extract color components from 16-bit ${this.format} pixels\\n`;\n        if (this.format === 'rgb565') {\n          cCode += `void getRGBComponents(uint16_t pixel, uint8_t* r, uint8_t* g, uint8_t* b) {\\n`;\n          cCode += `    *r = ((pixel >> 11) & 0x1F) * 255 / 31; // 5-bit Red component\\n`;\n          cCode += `    *g = ((pixel >> 5) & 0x3F) * 255 / 63;  // 6-bit Green component\\n`;\n          cCode += `    *b = (pixel & 0x1F) * 255 / 31;         // 5-bit Blue component\\n`;\n          cCode += `}\\n`;\n        } else { // BGR565\n          cCode += `void getBGRComponents(uint16_t pixel, uint8_t* b, uint8_t* g, uint8_t* r) {\\n`;\n          cCode += `    *b = ((pixel >> 11) & 0x1F) * 255 / 31; // 5-bit Blue component\\n`;\n          cCode += `    *g = ((pixel >> 5) & 0x3F) * 255 / 63;  // 6-bit Green component\\n`;\n          cCode += `    *r = (pixel & 0x1F) * 255 / 31;         // 5-bit Red component\\n`;\n          cCode += `}\\n`;\n        }\n      }\n      \n      const blob = new Blob([cCode], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const filename = `image_${this.format}_${this.imageWidth}x${this.imageHeight}.c`;\n      \n      this.triggerDownload(url, filename);\n    },\n    \n    triggerDownload(url, filename) {\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    \n    getCompressionRatio() {\n      if (!this.convertedSize || !this.imageData) return '0';\n      const originalSize = this.imageData.length;\n      return ((this.convertedSize / originalSize) * 100).toFixed(1);\n    },\n    getChannelStyle(channel) {\n      const styles = {\n        'R': { background: '#ff0000' },\n        'G': { background: '#00ff00' },\n        'B': { background: '#0000ff' },\n        'A': { \n          background: '#ffffff',\n          color: '#000',\n          textShadow: 'none',\n          borderLeft: '1px solid #ddd',\n          borderRight: '1px solid #ddd'\n        }\n      };\n      return styles[channel];\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  /* font-family: Arial, sans-serif;  \n  margin: 0 auto;\n  padding: 20px;  \n  background-color: #ffffff;\n  border-radius: 10px; */\n  background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n}\n\n.image-converter {\n  font-family: Arial, sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;  \n  background-color: #fff;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.logo {\n  height: 50px;\n  width: auto;\n}\n\n.upload-section {\n  margin-bottom: 20px;\n}\n\n.upload-section input[type=\"file\"] {\n  display: none;\n}\n\nbutton {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 10px 0;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.preview-section {\n  margin-top: 20px;\n}\n\n.image-preview {\n  display: block;\n  margin-bottom: 20px;\n}\n\n.preview-container {\n  width: 100%;\n  height: 400px;\n  border: 2px solid #ddd;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  margin-bottom: 20px;\n  background-color: #383838;\n}\n\n.checkerboard {\n  background-image: linear-gradient(45deg, #f0f0f0 25%, transparent 25%),\n                    linear-gradient(-45deg, #f0f0f0 25%, transparent 25%),\n                    linear-gradient(45deg, transparent 75%, #f0f0f0 75%),\n                    linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  border-radius: 0px;\n  border: 1px solid #000;\n  background-color: #fff;\n}\n\n.preview-container img {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  border-radius: 0px;\n}\n\n.image-info {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  z-index: 1;\n}\n\n.conversion-options {\n  background-color: #ededed;\n  padding: 15px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.format-selection, .output-selection {\n  margin-bottom: 15px;\n}\n\n.option-row {\n  display: flex;\n  align-items: flex-start;\n  gap: 15px;\n  \n}\n\n.option-label {\n  min-width: 90px;\n  padding-top: 8px;\n  \n}\n\n.option-label h3 {\n  margin: 0;\n  white-space: nowrap;\n}\n\n.option-control {\n  flex: 1;\n  display: flex;\n  gap: 15px;\n  align-items: center;  \n}\n\n.select-wrapper {\n  width: 200px;\n  flex-shrink: 0;\n  position: relative;\n}\n\n.select-wrapper select {\n  width: 100%;\n  padding: 8px 12px;\n  padding-right: 30px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  font-size: 14px;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  cursor: pointer;\n}\n\n.select-wrapper::after {\n  content: '▼';\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  font-size: 12px;\n  color: #666;\n  z-index: 1;\n}\n\n.select-wrapper select::-ms-expand {\n  display: none;\n}\n\n.color-legend-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: 0;\n}\n\n.format-selection, .output-selection {\n  background: white;\n  padding: 15px;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  margin-bottom: 15px;\n}\n\nh1, h2, h3 {\n  color: #333;\n}\n\nh3 {\n  margin-bottom: 10px;\n  font-size: 1em;\n}\n\n.conversion-info {\n    \n  background-color: #e9f7ef;\n  padding: 10px;\n  border-radius: 4px;\n  border-left: 4px solid #4CAF50;\n}\n</style>\n","import { render } from \"./ImageConverter.vue?vue&type=template&id=11035bc2&scoped=true\"\nimport script from \"./ImageConverter.vue?vue&type=script&lang=js\"\nexport * from \"./ImageConverter.vue?vue&type=script&lang=js\"\n\nimport \"./ImageConverter.vue?vue&type=style&index=0&id=11035bc2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11035bc2\"]])\n\nexport default __exports__","<template>\n  <div class=\"binary-viewer\">\n    <h2>Binary file viewer</h2>\n    <div class=\"viewer-container\">\n      <!-- 파일 선택 영역 -->\n      <div class=\"file-section\">\n        <input type=\"file\" @change=\"onFileSelect\" ref=\"fileInput\" style=\"display: none\">\n        <button @click=\"fileInput.click()\" class=\"primary-btn\">파일 선택</button>\n        <span v-if=\"fileName\" class=\"file-info\">{{ fileName }} ({{ fileSize }})</span>\n      </div>\n\n      <!-- 로딩 표시 -->\n      <div v-if=\"isLoading\" class=\"loading-section\">\n        <div class=\"progress-bar\">\n          <div class=\"progress\" :style=\"{ width: `${progress}%` }\"></div>\n        </div>\n        <span>파일 로딩 중... {{ progress }}%</span>\n      </div>\n\n      <!-- 컨트롤 영역 -->\n      <div v-if=\"fileContent\" class=\"control-section\">\n        <div class=\"left-controls\">\n          <label>\n            <input type=\"checkbox\" v-model=\"showAscii\"> Show ASCII\n          </label>\n          <label>\n            <span style=\"padding-right: 10px;\">Bytes/Line</span>\n            <select  v-model=\"bytesPerLine\">\n              <option :value=\"8\">8</option>\n              <option :value=\"16\">16</option>\n              <option :value=\"32\">32</option>\n            </select>\n          </label>\n        </div>\n        <div class=\"right-controls\">\n          <input \n            type=\"text\" \n            v-model=\"searchText\"\n            placeholder=\"16진수 검색 (예: FF 00)\"\n            class=\"search-input\"\n            @keyup.enter=\"search\"\n          >\n          <button @click=\"search\" class=\"primary-btn\">검색</button>\n        </div>\n      </div>\n\n      <!-- 16진수 표시 영역 -->\n      <div v-if=\"fileContent\" class=\"hex-view\" ref=\"hexView\">\n        <div class=\"hex-content\" :style=\"{ height: `${totalHeight}px` }\">\n          <div \n            class=\"viewport\" \n            :style=\"{ transform: `translateY(${scrollOffset}px)` }\"\n          >\n            <div \n              v-for=\"line in visibleLines\" \n              :key=\"line.index\"\n              class=\"hex-line\"\n            >\n              <!-- 주소 -->\n              <div class=\"address\">{{ formatAddress(line.offset) }}</div>\n              \n              <!-- 16진수 값 -->\n              <div class=\"hex-values\">\n                <span \n                  v-for=\"(byte, byteIndex) in line.bytes\" \n                  :key=\"byteIndex\"\n                  :class=\"[\n                    'hex-byte', \n                    { \n                      highlighted: isHighlighted(line.offset + byteIndex),\n                      selected: isSelected(line.offset + byteIndex)\n                    }\n                  ]\"\n                  @click=\"selectByte(line.offset + byteIndex)\"\n                >{{ formatByte(byte) }}</span>\n              </div>\n              \n              <!-- ASCII 값 -->\n              <div v-if=\"showAscii\" class=\"ascii-values\">\n                <span \n                  v-for=\"(byte, byteIndex) in line.bytes\" \n                  :key=\"byteIndex\"\n                  :class=\"{ \n                    highlighted: isHighlighted(line.offset + byteIndex),\n                    selected: isSelected(line.offset + byteIndex)\n                  }\"\n                  @click=\"selectByte(line.offset + byteIndex)\"\n                >{{ toAscii(byte) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\n\n// 상수\nconst CHUNK_SIZE = 1024 * 1024 // 1MB\nconst LINE_HEIGHT = 16 // 20px에서 16px로 줄임\nconst CACHE_SIZE = 10 * 1024 * 1024 // 10MB 캐시 크기\n\n// refs\nconst fileInput = ref(null)\nconst hexView = ref(null)\nconst fileContent = ref(null)\nconst fileName = ref('')\nconst fileSize = ref('')\nconst isLoading = ref(false)\nconst progress = ref(0)\nconst showAscii = ref(true)\nconst bytesPerLine = ref(16)\nconst searchText = ref('')\nconst highlightedBytes = ref(new Set())\nconst startLine = ref(0)\nconst selectedFile = ref(null)\nconst chunksCache = ref(new Map()) // 청크 캐시\nconst visibleLinesData = ref([])\nconst selectedByte = ref(null)\n\n// 계산된 속성\nconst visibleLines = computed(() => {\n  return visibleLinesData.value\n})\n\nconst totalLines = computed(() => {\n  if (!selectedFile.value) return 0\n  const fullLines = Math.floor(selectedFile.value.size / bytesPerLine.value)\n  const hasRemainder = selectedFile.value.size % bytesPerLine.value > 0\n  return fullLines + (hasRemainder ? 1 : 0)\n})\n\nconst totalHeight = computed(() => {\n  return totalLines.value * LINE_HEIGHT\n})\n\nconst scrollOffset = computed(() => {\n  return Math.max(0, startLine.value) * LINE_HEIGHT\n})\n\n// 메서드\nconst formatAddress = (offset) => offset.toString(16).padStart(8, '0').toUpperCase()\nconst formatByte = (byte) => {\n  if (byte === undefined) return '  '\n  return byte.toString(16).padStart(2, '0').toUpperCase()\n}\nconst toAscii = (byte) => {\n  if (byte === undefined) return ' '\n  return byte >= 32 && byte <= 126 ? String.fromCharCode(byte) : '.'\n}\nconst isHighlighted = (index) => highlightedBytes.value.has(index)\n\nconst formatFileSize = (bytes) => {\n  const units = ['B', 'KB', 'MB', 'GB']\n  let size = bytes\n  let unitIndex = 0\n  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024\n    unitIndex++\n  }\n  \n  return `${size.toFixed(1)} ${units[unitIndex]}`\n}\n\nconst loadLinesRange = async (start, end) => {\n  const lines = []\n  const startOffset = start * bytesPerLine.value\n  const endOffset = Math.min(end * bytesPerLine.value, selectedFile.value.size)\n  \n  // 필요한 청크들을 로드\n  await ensureChunksLoaded(startOffset, endOffset)\n  \n  // 마지막 라인 번호 계산\n  const fullLines = Math.floor(selectedFile.value.size / bytesPerLine.value)\n  const hasRemainder = selectedFile.value.size % bytesPerLine.value > 0\n  const lastLine = fullLines + (hasRemainder ? 0 : -1)\n  \n  for (let i = start; i <= lastLine && i < end; i++) {\n    const offset = i * bytesPerLine.value\n    if (offset >= selectedFile.value.size) break\n    \n    const remainingBytes = selectedFile.value.size - offset\n    const lineLength = Math.min(bytesPerLine.value, remainingBytes)\n    const bytes = await getBytes(offset, lineLength)\n    \n    lines.push({\n      index: i,\n      offset,\n      bytes\n    })\n  }\n  \n  return lines\n}\n\nconst getChunkKey = (offset) => {\n  return Math.floor(offset / CHUNK_SIZE) * CHUNK_SIZE\n}\n\nconst ensureChunksLoaded = async (startOffset, endOffset) => {\n  const startChunk = getChunkKey(startOffset)\n  const endChunk = getChunkKey(endOffset)\n  \n  for (let offset = startChunk; offset <= endChunk; offset += CHUNK_SIZE) {\n    if (!chunksCache.value.has(offset)) {\n      await loadChunk(offset)\n    }\n  }\n  \n  // 캐시 크기 관리\n  while (getCacheSize() > CACHE_SIZE) {\n    const oldestKey = chunksCache.value.keys().next().value\n    chunksCache.value.delete(oldestKey)\n  }\n}\n\nconst getCacheSize = () => {\n  let size = 0\n  for (const chunk of chunksCache.value.values()) {\n    size += chunk.length\n  }\n  return size\n}\n\nconst loadChunk = async (offset) => {\n  const chunk = selectedFile.value.slice(\n    offset,\n    Math.min(offset + CHUNK_SIZE, selectedFile.value.size)\n  )\n  const buffer = await readChunk(chunk)\n  chunksCache.value.set(offset, new Uint8Array(buffer))\n}\n\nconst getBytes = async (offset, length) => {\n  const chunkOffset = getChunkKey(offset)\n  const chunk = chunksCache.value.get(chunkOffset)\n  if (!chunk) return new Array(length).fill(undefined)\n  \n  const relativeOffset = offset - chunkOffset\n  const bytes = chunk.slice(relativeOffset, relativeOffset + length)\n  \n  // 파일 끝을 넘어가는 부분은 제거\n  if (offset + bytes.length > selectedFile.value.size) {\n    bytes.length = selectedFile.value.size - offset\n  }\n  \n  return Array.from(bytes)\n}\n\nconst onFileSelect = async (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  fileName.value = file.name\n  fileSize.value = formatFileSize(file.size)\n  selectedFile.value = file\n  chunksCache.value.clear()\n  startLine.value = 0\n  isLoading.value = true\n  progress.value = 0\n  \n  try {\n    fileContent.value = true // 먼저 뷰어를 표시\n    await nextTick()\n    \n    // 스크롤 이벤트 핸들러 등록\n    if (hexView.value) {\n      console.debug('Registering scroll event handler')\n      hexView.value.addEventListener('scroll', handleScroll)\n    }\n    \n    // 초기 데이터 로드\n    await updateVisibleLines()\n  } catch (error) {\n    console.error('파일 로딩 오류:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst readChunk = (chunk) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = e => resolve(e.target.result)\n    reader.onerror = reject\n    reader.readAsArrayBuffer(chunk)\n    console.debug('readChunk:', reader.length)\n  })\n}\n\nconst search = () => {\n  const query = searchText.value.trim()\n  if (!query || !fileContent.value) return\n  \n  highlightedBytes.value.clear()\n  \n  const searchBytes = query\n    .replace(/\\s+/g, '')\n    .match(/.{1,2}/g)\n    ?.map(hex => parseInt(hex, 16))\n  \n  if (!searchBytes) return\n  \n  for (let i = 0; i < fileContent.value.length - searchBytes.length + 1; i++) {\n    if (searchBytes.every((byte, j) => fileContent.value[i + j] === byte)) {\n      for (let j = 0; j < searchBytes.length; j++) {\n        highlightedBytes.value.add(i + j)\n      }\n    }\n  }\n}\n\nconst updateVisibleLines = async () => {\n  if (!selectedFile.value) return\n  \n  const containerHeight = hexView.value?.clientHeight || 0\n  const visibleCount = Math.ceil(containerHeight / LINE_HEIGHT) + 10 // 버퍼 증가\n  const start = Math.max(0, startLine.value - 5)\n  const end = Math.min(totalLines.value, startLine.value + visibleCount + 5)\n  \n  console.debug('Updating visible lines:', start, '->', end)\n  const lines = await loadLinesRange(start, end)\n  visibleLinesData.value = lines\n}\n\nconst handleScroll = () => {\n  if (!hexView.value || !selectedFile.value) return\n  \n  const newStartLine = Math.floor(hexView.value.scrollTop / LINE_HEIGHT)\n  if (newStartLine !== startLine.value) {\n    startLine.value = newStartLine\n    updateVisibleLines()\n  }\n}\n\nconst selectByte = (index) => {\n  selectedByte.value = selectedByte.value === index ? null : index\n}\n\nconst isSelected = (index) => selectedByte.value === index\n\n// bytesPerLine watch 추가\nwatch(bytesPerLine, (newValue) => {\n  document.documentElement.style.setProperty('--bytes-per-line', newValue)\n}, { immediate: true })\n\n// 라이프사이클 훅\nonMounted(() => {\n  console.debug('Component mounted')\n})\n\nonUnmounted(() => {\n  if (hexView.value) {\n    console.debug('Removing scroll event handler')\n    hexView.value.removeEventListener('scroll', handleScroll)\n  }\n})\n</script>\n\n<style scoped>\n.binary-viewer {\n  padding: 20px;\n  height: 100%;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.viewer-container {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  height: calc(100% - 40px);\n}\n\n.file-section {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.file-info {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.control-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f5f1ea;\n  padding: 12px;\n  border-radius: 6px;\n}\n\n.left-controls, .right-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 200px;\n  padding: 6px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.hex-view {\n  flex-grow: 1;\n  overflow-y: scroll;\n  border: 1px solid #e8e1d9;\n  border-radius: 6px;\n  background: #faf7f2;\n  font-family: monospace;\n  position: relative;\n  height: 600px;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.hex-content {\n  position: relative;\n  width: 100%;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.viewport {\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 0;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.hex-line {\n  display: flex;\n  padding: 2px 4px;\n  height: 20px;\n  align-items: center;\n  gap: 12px;\n}\n\n.hex-line:hover {\n  background: rgba(0,0,0,0.03);\n}\n\n.address {\n  color: #6b5b95;\n  width: 80px;\n  flex-shrink: 0;\n  padding-left: 4px;\n  border-right: 1px solid #e8e1d9;\n}\n\n.hex-values {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 18px);\n  gap: 3px;\n  margin-right: 16px;\n  width: calc((18px + 3px) * var(--bytes-per-line, 16) - 3px);\n  padding: 0 8px;\n  border-right: 1px solid #e8e1d9;\n  background: rgba(107, 91, 149, 0.03);\n}\n\n.hex-byte {\n  color: #3c4f76;\n  width: 18px;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n}\n\n.hex-byte:hover {\n  background: rgba(60, 79, 118, 0.1);\n  border-radius: 2px;\n}\n\n.hex-byte.selected,\n.ascii-values span.selected {\n  background: #4a90e2;\n  color: white;\n  border-radius: 2px;\n}\n\n.ascii-values span {\n  user-select: none;\n  cursor: pointer;\n}\n\n.ascii-values span:hover {\n  background: rgba(68, 102, 68, 0.1);\n  border-radius: 2px;\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 4px;\n  background: #eee;\n  border-radius: 2px;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.progress {\n  height: 100%;\n  background: #8b7355;\n  transition: width 0.3s ease;\n}\n\n.primary-btn {\n  background: #8b7355;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.primary-btn:hover {\n  background: #9c8465;\n}\n\nselect {\n  padding: 4px 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n</style>","import script from \"./BinaryViewer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BinaryViewer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BinaryViewer.vue?vue&type=style&index=0&id=e1cffb04&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1cffb04\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport ImageConverter from '@/components/ImageConverter.vue'\nimport BinaryViewer from '@/components/BinaryViewer.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'ImageConverter',\n    component: ImageConverter\n  },\n  {\n    path: '/binary-viewer',\n    name: 'BinaryViewer',\n    component: BinaryViewer\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router ","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\napp.use(router)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknovatool_claude\"] = self[\"webpackChunknovatool_claude\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8610); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","_imports_0","alt","_hoisted_4","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_5","_component_router_view","name","__exports__","render","key","type","accept","onChange","args","$options","onFileSelected","ref","onClick","$event","_ctx","$refs","fileInput","click","$data","imageLoaded","_hoisted_6","imagePreview","style","objectFit","_hoisted_7","_hoisted_8","_toDisplayString","imageWidth","imageHeight","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","format","_createStaticVNode","_hoisted_14","_normalizeClass","getLegendClass","_Fragment","_renderList","getChannelOrder","channel","_normalizeStyle","getChannelStyle","_hoisted_15","getFormatDescription","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","outputType","value","convertImage","_createCommentVNode","convertedSize","_hoisted_20","toFixed","getCompressionRatio","data","imageData","computed","this","split","toLowerCase","includes","startsWith","toUpperCase","methods","event","file","target","files","reader","FileReader","onload","e","result","loadImageData","readAsDataURL","img","Image","width","height","canvas","document","createElement","ctx","getContext","drawImage","getImageData","endsWith","convertTo8888Format","convertTo4444Format","convertTo565Format","length","downloadBinary","downloadCArray","Uint8Array","i","r","g","b","a","pixelOffset","Math","floor","pixel16bit","blob","Blob","url","URL","createObjectURL","filename","triggerDownload","cCode","bytesPerLine","j","toString","padStart","href","download","body","appendChild","removeChild","revokeObjectURL","originalSize","styles","background","color","textShadow","borderLeft","borderRight","CHUNK_SIZE","LINE_HEIGHT","CACHE_SIZE","hexView","fileContent","fileName","fileSize","isLoading","progress","showAscii","searchText","highlightedBytes","Set","startLine","selectedFile","chunksCache","Map","visibleLinesData","selectedByte","visibleLines","totalLines","fullLines","size","hasRemainder","totalHeight","scrollOffset","max","formatAddress","offset","formatByte","byte","undefined","toAscii","String","fromCharCode","isHighlighted","index","has","formatFileSize","bytes","units","unitIndex","loadLinesRange","async","start","end","lines","startOffset","endOffset","min","ensureChunksLoaded","lastLine","remainingBytes","lineLength","getBytes","push","getChunkKey","startChunk","endChunk","loadChunk","getCacheSize","oldestKey","keys","next","delete","chunk","values","slice","buffer","readChunk","set","chunkOffset","get","Array","fill","relativeOffset","from","onFileSelect","clear","nextTick","console","debug","addEventListener","handleScroll","updateVisibleLines","error","Promise","resolve","reject","onerror","readAsArrayBuffer","search","query","trim","searchBytes","replace","match","map","hex","parseInt","every","add","containerHeight","clientHeight","visibleCount","ceil","newStartLine","scrollTop","selectByte","isSelected","watch","newValue","documentElement","setProperty","immediate","onMounted","onUnmounted","removeEventListener","routes","path","component","ImageConverter","BinaryViewer","router","createRouter","history","createWebHistory","process","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}