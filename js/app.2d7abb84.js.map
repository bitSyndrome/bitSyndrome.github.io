{"version":3,"file":"js/app.2d7abb84.js","mappings":"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","sources":["webpack://novatool_claude/./src/App.vue","webpack://novatool_claude/./src/App.vue?7ccd","webpack://novatool_claude/./src/components/ImageConverter.vue","webpack://novatool_claude/./src/components/ImageConverter.vue?f286","webpack://novatool_claude/./src/components/ImageMap.vue","webpack://novatool_claude/./src/components/ImageMap.vue?99e2","webpack://novatool_claude/./src/components/BinaryViewer.vue","webpack://novatool_claude/./src/components/BinaryViewer.vue?3df4","webpack://novatool_claude/./src/components/BatteryCalc.vue","webpack://novatool_claude/./src/components/BatteryCalc.vue?21d5","webpack://novatool_claude/./src/components/ChangeLog.vue","webpack://novatool_claude/./src/components/ChangeLog.vue?27ca","webpack://novatool_claude/./src/router/index.js","webpack://novatool_claude/./src/main.js","webpack://novatool_claude/webpack/bootstrap","webpack://novatool_claude/webpack/runtime/chunk loaded","webpack://novatool_claude/webpack/runtime/compat get default export","webpack://novatool_claude/webpack/runtime/define property getters","webpack://novatool_claude/webpack/runtime/global","webpack://novatool_claude/webpack/runtime/hasOwnProperty shorthand","webpack://novatool_claude/webpack/runtime/publicPath","webpack://novatool_claude/webpack/runtime/jsonp chunk loading","webpack://novatool_claude/webpack/startup"],"sourcesContent":["<template>\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n  <div class=\"app\">\n    <header class=\"main-header\">\n      <div class=\"header-content\">\n        <img src=\"@/assets/logo_novatool2.png\" alt=\"Novatool Logo\" class=\"logo\" />\n        <!-- Hamburger Button for Mobile -->\n        <button \n          class=\"hamburger-btn\" \n          @click=\"toggleMobileMenu\" \n          aria-label=\"Toggle navigation menu\"\n        >\n          <span class=\"hamburger-icon\">&#9776;</span>\n        </button>\n\n        <nav class=\"main-nav\" :class=\"{ 'mobile-menu-open': isMobileMenuOpen }\">\n          <router-link to=\"/\" class=\"nav-link\" @click=\"closeMobileMenu\">Image Converter</router-link>\n          <router-link to=\"/image-map\" class=\"nav-link\" @click=\"closeMobileMenu\">Image map</router-link>\n          <router-link to=\"/binary-viewer\" class=\"nav-link\" @click=\"closeMobileMenu\">Binary Viewer</router-link>\n          <router-link to=\"/battery-calc\" class=\"nav-link\" @click=\"closeMobileMenu\">Battery Calc</router-link>\n          <router-link to=\"/change-logs\" class=\"nav-link\" @click=\"closeMobileMenu\">Change Log</router-link>          \n        </nav>\n      </div>\n    </header>\n    \n\n\n    <main class=\"main-content\">\n      <router-view></router-view>\n    </main>\n    <div style=\"text-align:center; padding: 10px;\">\n      <a href=\"https://hits.sh/bitsyndrome.github.io/\"><img alt=\"Hits\" src=\"https://hits.sh/bitsyndrome.github.io.svg\"/></a>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isMobileMenuOpen: false\n    }\n  },\n  methods: {\n    toggleMobileMenu() {\n      this.isMobileMenuOpen = !this.isMobileMenuOpen\n    },\n    closeMobileMenu() {\n      this.isMobileMenuOpen = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.app {\n  min-height: 100vh;\n  background-color: #faf7f2;\n}\n\n.main-header {\n  background-color: #ffffff;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 10px 0;\n}\n\n.header-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n}\n\n.logo {\n  height: 50px;\n  width: auto;\n}\n\n.hamburger-btn {\n  display: none;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  z-index: 20;\n}\n\n.main-nav {\n  display: flex;\n  gap: 10px;\n}\n\n.nav-link {\n  color: #5c4d3d;\n  text-decoration: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.nav-link:hover {\n  background-color: #f5f1ea;\n}\n\n.router-link-active {\n  background-color: #f5f1ea;\n  font-weight: bold;\n}\n\n.main-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n/* Mobile Responsive Styles */\n@media screen and (max-width: 768px) {\n  .hamburger-btn {\n    display: block;\n  }\n\n  .main-nav {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    background-color: #ffffff;\n    flex-direction: column;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    z-index: 10;\n  }\n\n  .main-nav.mobile-menu-open {\n    display: flex;\n  }\n\n  .nav-link {\n    padding: 15px;\n    text-align: center;\n    border-top: 1px solid #f0f0f0;\n  }\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=73c4c926&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=73c4c926&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73c4c926\"]])\n\nexport default __exports__","// App.vue\n<template>\n  <div class=\"container\">\n    <div class=\"image-converter\">\n      <div class=\"upload-section\">\n        <input type=\"file\" accept=\"image/*\" @change=\"onFilesSelected\" ref=\"fileInput\" multiple>        \n        <label class=\"import-btn\">\n          <input  @click=\"$refs.fileInput.click()\" class=\"file-input\">\n          <span class=\"material-icons\">file_open</span>\n          Select Images\n        </label>\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n          <p>Selected {{ selectedFiles.length }} files:</p>\n          <ul>\n            <li v-for=\"(file, index) in selectedFiles\" :key=\"index\" @click=\"loadImagePreview(file)\">\n              <div class=\"file-info\">\n                <span class=\"file-name\">{{ file.name }}</span>\n                <span class=\"file-size\">{{ formatFileSize(file.size) }}</span>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"preview-section\" v-if=\"imagePreview\">\n        <h3>Preview</h3>\n        <div class=\"image-preview\">\n          <div class=\"preview-container\">\n            <img class=\"checkerboard\" :src=\"imagePreview\" alt=\"미리보기\" :style=\"{ objectFit: 'contain' }\" />\n            <div class=\"image-info\">\n              {{ imageWidth }} X {{ imageHeight }}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"selectedFiles.length > 0\" class=\"conversion-options\">\n        <h3>Conversion Options</h3>\n        <div class=\"format-selection\">\n          <div class=\"option-row\">\n            <div class=\"option-label\">\n              <h3>Color Format</h3>\n            </div>\n            <div class=\"option-control\">\n              <div class=\"select-wrapper\">\n                <select v-model=\"format\">\n                  <optgroup label=\"32-bit Format (8888)\">\n                    <option value=\"rgba8888\">RGBA8888</option>\n                    <option value=\"argb8888\">ARGB8888</option>\n                    <option value=\"bgra8888\">BGRA8888</option>\n                    <option value=\"abgr8888\">ABGR8888</option>\n                  </optgroup>\n                  <optgroup label=\"16-bit Format (4444)\">\n                    <option value=\"rgba4444\">RGBA4444</option>\n                    <option value=\"argb4444\">ARGB4444</option>\n                    <option value=\"bgra4444\">BGRA4444</option>\n                    <option value=\"abgr4444\">ABGR4444</option>\n                  </optgroup>\n                  <optgroup label=\"16-bit Format (565)\">\n                    <option value=\"rgb565\">RGB565</option>\n                    <option value=\"bgr565\">BGR565</option>\n                  </optgroup>\n                </select>\n              </div>\n              <div class=\"color-legend-item\">\n                <div class=\"color-legend\" :class=\"getLegendClass\">\n                  <template v-for=\"channel in getChannelOrder\" :key=\"channel\">\n                    <span :style=\"getChannelStyle(channel)\">{{ channel }}</span>\n                  </template>\n                </div>\n                <span class=\"legend-description\">{{ getFormatDescription }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"output-selection\">\n          <div class=\"option-row\">\n            <div class=\"option-label\">\n              <h3>Output Format</h3>\n            </div>\n            <div class=\"option-control\">\n              <div class=\"select-wrapper\">\n                <select v-model=\"outputType\">\n                  <option value=\"binary\">Binary</option>\n                  <option value=\"c-array\">C Array</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"option-row\" v-if=\"selectedFiles.length > 1\">\n          <div class=\"option-label\">\n            <h3>Output Options</h3>\n          </div>\n          <div class=\"option-control\">\n            <label class=\"checkbox-container\">\n              <input type=\"checkbox\" v-model=\"zipOutput\">\n              <span>Combine all outputs into a ZIP file</span>\n            </label>\n          </div>\n        </div>\n        \n        <button class=\"import-btn\" @click=\"convertAllImages\" :disabled=\"isConverting\">\n          <span class=\"material-icons\">published_with_changes</span>\n          {{ isConverting ? 'Converting...' : selectedFiles.length > 1 ? 'Convert All Images' : 'Convert Image' }}\n        </button>\n      </div>\n      \n      \n      \n      <div v-if=\"conversions.length > 0\" class=\"conversion-results\">\n        <h3>Conversion Results</h3>\n        <div class=\"results-list\">\n          <div v-for=\"(result, index) in conversions\" :key=\"index\" class=\"result-item\">\n            <div class=\"result-info\">\n              <strong>{{ result.fileName }}</strong>\n              <span>{{ result.size }} KB</span>\n              <span>Compression: {{ result.compressionRatio }}%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Optional: Import JSZip if using ZIP output\nimport JSZip from 'jszip';\n\nexport default {\n  name: 'Novatool NovaTool',\n  created() {\n    document.title = this.$route.name // 현재 라우트 이름으로 페이지 타이틀을 설정합니다.\n  },\n  data() {\n    return {\n      selectedFiles: [],\n      imagePreview: '',\n      imageWidth: 0,\n      imageHeight: 0,\n      format: 'rgba8888',\n      outputType: 'binary',\n      zipOutput: true,\n      isConverting: false,\n      conversions: []\n    }\n  },\n  computed: {\n    getLegendClass() {\n      return this.format.split(/\\d+/)[0];\n    },\n    getChannelOrder() {\n      const format = this.format.toLowerCase();\n      if (format.includes('565')) {\n        return format.startsWith('rgb') ? ['R', 'G', 'B'] : ['B', 'G', 'R'];\n      }\n      return format.split(/\\d+/)[0].toUpperCase().split('');\n    },\n    getFormatDescription() {\n      if (this.format.includes('8888')) {\n        return '32-bit (Each channel 8-bit)';\n      } else if (this.format.includes('4444')) {\n        return '16-bit (Each channel 4-bit)';\n      } else {\n        return '16-bit (R:5, G:6, B:5)';\n      }\n    }\n  },\n  methods: {\n    onFilesSelected(event) {\n      const files = event.target.files;\n      if (!files || files.length === 0) return;\n\n      this.conversions.splice(0, this.conversions.length);\n      \n      this.selectedFiles = Array.from(files);\n      \n      // Preview the first image\n      if (this.selectedFiles.length > 0) {\n        this.loadImagePreview(this.selectedFiles[0]);\n      }\n    },\n    \n    loadImagePreview(file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePreview = e.target.result;\n        this.loadImageDimensions(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    },\n    \n    loadImageDimensions(src) {\n      const img = new Image();\n      img.onload = () => {\n        this.imageWidth = img.width;\n        this.imageHeight = img.height;\n      };\n      img.src = src;\n    },\n    \n    async convertAllImages() {\n      if (this.selectedFiles.length === 0 || this.isConverting) return;\n\n      this.$gtag.event('button_click', {\n        event_category: 'interaction',\n        event_label: 'CovertAllImages',\n      }); // Google Analytics 이벤트 전송\n      \n      this.isConverting = true;\n      this.conversions = [];\n      \n      try {\n        if((this.selectedFiles.length == 1) || (this.zipOutput == false))        \n        {\n          for (const file of this.selectedFiles) {\n            await this.processFile(file);\n          }\n        }\n        else\n        {\n          await this.convertAndZip();\n        }\n       \n      } catch (error) {\n        console.error('Conversion error:', error);\n        alert('An error occurred during conversion.');\n      } finally {\n        this.isConverting = false;\n      }\n    },\n    \n    async convertAndZip() {\n      // Requires JSZip library\n      // If JSZip is not imported, we can fall back to individual downloads\n      if (typeof JSZip === 'undefined') {\n        alert('ZIP functionality requires JSZip library. Processing files individually.');\n        for (const file of this.selectedFiles) {\n          await this.processFile(file);\n        }\n        return;\n      }\n      \n      const zip = new JSZip(); \n      const folder = zip.folder(\"converted_images\");\n      \n      for (const file of this.selectedFiles) {\n        const result = await this.convertFile(file);\n        \n        if (result) {\n          const { data, fileName, size, compressionRatio } = result;\n          \n          this.conversions.push({\n            fileName,\n            size: (size / 1024).toFixed(2),\n            compressionRatio\n          });\n          \n          // Add file to ZIP\n          if (this.outputType === 'binary') {\n            folder.file(fileName + '.bin', data);\n          } else {\n            folder.file(fileName + '.c', this.generateCCode(data, file.name, data.length));\n          }\n        }\n      }\n      \n      // Generate ZIP file\n      const content = await zip.generateAsync({type: 'blob'});\n      const url = URL.createObjectURL(content);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `converted_images_${this.format}.zip`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    \n    async processFile(file) {\n      const result = await this.convertFile(file);\n      \n      if (result) {\n        const { data, fileName, size, compressionRatio } = result;\n        \n        this.conversions.push({\n          fileName,\n          size: (size / 1024).toFixed(2),\n          compressionRatio\n        });\n        \n        // Download individual file\n        if (this.outputType === 'binary') {\n          this.downloadBinary(data, fileName);\n        } else {\n          this.downloadCArray(data, fileName, file.name);\n        }\n      }\n    },\n    \n    async convertFile(file) {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const img = new Image();\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            canvas.width = img.width;\n            canvas.height = img.height;\n            \n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            \n            const imageData = ctx.getImageData(0, 0, img.width, img.height).data;\n            \n            let result;\n            \n            // 형식별 변환 처리\n            if (this.format.endsWith('8888')) {\n              result = this.convertTo8888Format(imageData, this.format);\n            } else if (this.format.endsWith('4444')) {\n              result = this.convertTo4444Format(imageData, this.format);\n            } else if (this.format.endsWith('565')) {\n              result = this.convertTo565Format(imageData, this.format);\n            }\n            \n            const originalSize = imageData.length;\n            const compressionRatio = ((result.length / originalSize) * 100).toFixed(1);\n            \n            resolve({\n              data: result,\n              fileName: this.getBaseFileName(file.name),\n              width: img.width,\n              height: img.height,\n              size: result.length,\n              compressionRatio\n            });\n          };\n          img.src = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    \n    getBaseFileName(name) {\n      return name.split('.').slice(0, -1).join('.');\n    },\n    \n    convertTo8888Format(imageData, format) {\n      const length = imageData.length / 4;\n      const result = new Uint8Array(imageData.length);\n      \n      for (let i = 0; i < length; i++) {\n        const r = imageData[i * 4];     // Red\n        const g = imageData[i * 4 + 1]; // Green\n        const b = imageData[i * 4 + 2]; // Blue\n        const a = imageData[i * 4 + 3]; // Alpha\n        \n        const pixelOffset = i * 4;\n        \n        // 포맷별 바이트 순서 배치\n        switch (format) {\n          case 'rgba8888':\n            result[pixelOffset] = r;\n            result[pixelOffset + 1] = g;\n            result[pixelOffset + 2] = b;\n            result[pixelOffset + 3] = a;\n            break;\n          case 'argb8888':\n            result[pixelOffset] = a;\n            result[pixelOffset + 1] = r;\n            result[pixelOffset + 2] = g;\n            result[pixelOffset + 3] = b;\n            break;\n          case 'bgra8888':\n            result[pixelOffset] = b;\n            result[pixelOffset + 1] = g;\n            result[pixelOffset + 2] = r;\n            result[pixelOffset + 3] = a;\n            break;\n          case 'abgr8888':\n            result[pixelOffset] = a;\n            result[pixelOffset + 1] = b;\n            result[pixelOffset + 2] = g;\n            result[pixelOffset + 3] = r;\n            break;\n        }\n      }\n      \n      return result;\n    },\n    \n    convertTo4444Format(imageData, format) {\n      const length = imageData.length / 4;\n      const result = new Uint8Array(length * 2); // 각 픽셀당 2바이트\n      \n      for (let i = 0; i < length; i++) {\n        const r = Math.floor(imageData[i * 4] / 16);       // Red: 0-15\n        const g = Math.floor(imageData[i * 4 + 1] / 16);   // Green: 0-15\n        const b = Math.floor(imageData[i * 4 + 2] / 16);   // Blue: 0-15\n        const a = Math.floor(imageData[i * 4 + 3] / 16);   // Alpha: 0-15\n        \n        const pixelOffset = i * 2;\n        \n        // 포맷별 4비트 값 패킹\n        switch (format) {\n          case 'rgba4444':\n            result[pixelOffset] = (r << 4) | g;\n            result[pixelOffset + 1] = (b << 4) | a;\n            break;\n          case 'argb4444':\n            result[pixelOffset] = (a << 4) | r;\n            result[pixelOffset + 1] = (g << 4) | b;\n            break;\n          case 'bgra4444':\n            result[pixelOffset] = (b << 4) | g;\n            result[pixelOffset + 1] = (r << 4) | a;\n            break;\n          case 'abgr4444':\n            result[pixelOffset] = (a << 4) | b;\n            result[pixelOffset + 1] = (g << 4) | r;\n            break;\n        }\n      }\n      \n      return result;\n    },\n    \n    convertTo565Format(imageData, format) {\n      const length = imageData.length / 4;\n      const result = new Uint8Array(length * 2); // 각 픽셀당 2바이트\n      \n      for (let i = 0; i < length; i++) {\n        // 원본 0-255 값을 비트 수에 맞게 변환\n        // R: 5비트 (0-31), G: 6비트 (0-63), B: 5비트 (0-31)\n        const r = Math.floor(imageData[i * 4] / 255 * 31);      // Red: 0-31\n        const g = Math.floor(imageData[i * 4 + 1] / 255 * 63);  // Green: 0-63\n        const b = Math.floor(imageData[i * 4 + 2] / 255 * 31);  // Blue: 0-31\n        \n        const pixelOffset = i * 2;\n        \n        // RGB565는 16비트 색상 형식으로 다음과 같이 구성됩니다.\n        // RRRRRGGGGGGBBBBB (R: 5비트, G: 6비트, B: 5비트)\n        let pixel16bit;\n        \n        if (format === 'rgb565') {\n          // RGB565: R(5비트) | G(6비트) | B(5비트)\n          pixel16bit = (r << 11) | (g << 5) | b;\n        } else { // BGR565\n          // BGR565: B(5비트) | G(6비트) | R(5비트)\n          pixel16bit = (b << 11) | (g << 5) | r;\n        }\n        \n        // 16비트 값을 2개의 바이트로 저장 (리틀 엔디안)\n        result[pixelOffset] = pixel16bit & 0xFF;         // 하위 8비트\n        result[pixelOffset + 1] = (pixel16bit >> 8) & 0xFF; // 상위 8비트\n      }\n      \n      return result;\n    },\n    \n    downloadBinary(data, fileName) {\n      const blob = new Blob([data], { type: 'application/octet-stream' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${fileName}_${this.format}.bin`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    \n    downloadCArray(data, fileName, originalFileName) {\n      const cCode = this.generateCCode(data, originalFileName, data.length);\n      \n      const blob = new Blob([cCode], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${fileName}_${this.format}.c`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    \n    generateCCode(data, originalFileName, dataLength) {\n      let cCode = `// ${this.format} 이미지 데이터 - ${originalFileName}\\n`;\n      \n      // 각 형식에 대한 설명 추가\n      if (this.format.includes('rgba')) {\n        cCode += '// Byte order: Red, Green, Blue, Alpha\\n';\n      } else if (this.format.includes('argb')) {\n        cCode += '// Byte order: Alpha, Red, Green, Blue\\n';\n      } else if (this.format.includes('bgra')) {\n        cCode += '// Byte order: Blue, Green, Red, Alpha\\n';\n      } else if (this.format.includes('abgr')) {\n        cCode += '// Byte order: Alpha, Blue, Green, Red\\n';\n      } else if (this.format === 'rgb565') {\n        cCode += '// RGB565 Format: 16-bit (RRRRRGGGGGGBBBBB)\\n';\n        cCode += '// Little-endian byte order: Lower 8-bit, Upper 8-bit\\n';\n      } else if (this.format === 'bgr565') {\n        cCode += '// BGR565 Format: 16-bit (BBBBBGGGGGGRRRRR)\\n';\n        cCode += '// Little-endian byte order: Lower 8-bit, Upper 8-bit\\n';\n      }\n      \n      // 4444 형식인 경우 패킹 설명 추가\n      if (this.format.includes('4444')) {\n        cCode += '// 4-bit packing format: Each byte contains two 4-bit color values\\n';\n      }\n      \n      const safeFileName = this.getSafeVariableName(originalFileName);\n      cCode += `const unsigned char ${safeFileName}_data[${dataLength}] = {\\n`;\n      \n      const bytesPerLine = 12;\n      for (let i = 0; i < dataLength; i += bytesPerLine) {\n        cCode += '    ';\n        for (let j = 0; j < bytesPerLine && i + j < dataLength; j++) {\n          cCode += `0x${data[i + j].toString(16).padStart(2, '0')}`;\n          if (i + j < dataLength - 1) {\n            cCode += ', ';\n          }\n        }\n        cCode += '\\n';\n      }\n      \n      cCode += '};\\n\\n';\n      cCode += `const int ${safeFileName}_width = ${this.imageWidth};\\n`;\n      cCode += `const int ${safeFileName}_height = ${this.imageHeight};\\n`;\n      cCode += `const char* ${safeFileName}_format = \"${this.format}\";\\n`;\n      \n      return cCode;\n    },\n    \n    getSafeVariableName(fileName) {\n      // Remove extension and replace non-alphanumeric characters with underscore\n      return fileName\n        .split('.')[0]\n        .replace(/[^a-zA-Z0-9]/g, '_')\n        .replace(/^[0-9]/, '_$&'); // Ensure it doesn't start with a number\n    },\n    \n    formatFileSize(size) {\n      if (size < 1024) {\n        return size + ' B';\n      } else if (size < 1024 * 1024) {\n        return (size / 1024).toFixed(2) + ' KB';\n      } else {\n        return (size / (1024 * 1024)).toFixed(2) + ' MB';\n      }\n    },\n\n    getChannelStyle(channel) {\n      const styles = {\n        'R': { background: '#ff0000' },\n        'G': { background: '#00ff00' },\n        'B': { background: '#0000ff' },\n        'A': { \n          background: '#ffffff',\n          color: '#000',\n          textShadow: 'none',\n          borderLeft: '1px solid #ddd',\n          borderRight: '1px solid #ddd'\n        }\n      };\n      return styles[channel];\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-input {\n  display: none;\n}\n\n.import-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.import-btn:hover {\n  background-color: #45a049;\n}\n\n.import-btn .material-icons {\n  font-size: 18px;\n}\n\n.selected-files {\n  margin-top: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  border-radius: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n}\n\n.selected-files p {\n  color: #333;\n  font-weight: 600;\n  margin-bottom: 12px;\n  font-size: 0.95em;\n}\n\n.selected-files ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.selected-files li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 8px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n  cursor: pointer;\n}\n\n.selected-files li:before {\n  content: '📄';\n  margin-right: 10px;\n  font-size: 1.2em;\n}\n\n.selected-files li:hover {\n  background-color: #e9ecef;\n  transform: translateX(5px);\n}\n\n.file-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.file-name {\n  color: #2196F3;\n  font-weight: 500;\n}\n\n.file-size {\n  color: #6c757d;\n  font-size: 0.85em;\n  padding: 4px 8px;\n  background-color: #e9ecef;\n  border-radius: 4px;\n}\n\n.container {\n  background-color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n}\n\n.image-converter {\n  font-family: Arial, sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;  \n  background-color: #fff;\n}\n\n.upload-section {\n  margin-bottom: 20px;\n}\n\n.upload-section input[type=\"file\"] {\n  display: none;\n}\n\n.selected-files {\n  margin-top: 15px;\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 4px;\n  max-height: 150px;\n  overflow-y: auto;\n}\n\n.selected-files ul {\n  margin: 5px 0 0 0;\n  padding-left: 20px;\n}\n\n.selected-files li {\n  margin-bottom: 4px;\n  font-size: 0.9em;\n}\n\nbutton {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 10px 0;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.preview-section {\n  margin-top: 20px;\n}\n\n.image-preview {\n  display: block;\n  margin-bottom: 20px;\n}\n\n.preview-container {\n  width: 100%;\n  max-height: 800px;\n  border: 2px solid #ddd;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n  margin-bottom: 20px;\n  background-color: #383838;\n}\n\n.checkerboard {\n  /* background-image: linear-gradient(45deg, #f0f0f0 25%, transparent 25%),\n                    linear-gradient(-45deg, #f0f0f0 25%, transparent 25%),\n                    linear-gradient(45deg, transparent 75%, #f0f0f0 75%),\n                    linear-gradient(-45deg, transparent 75%, #f0f0f0 75%); */\n  background-image: \n    url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10'%3E%3Crect width='5' height='5' fill='%23ccc'/%3E%3Crect x='5' y='5' width='5' height='5' fill='%23ccc'/%3E%3C/svg%3E\");                    \n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  border-radius: 0px;\n  border: 1px solid #000;\n  background-color: #fff;\n}\n\n.preview-container img {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  border-radius: 0px;\n}\n\n.image-info {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  z-index: 1;\n}\n\n.conversion-options {\n  background-color: #ededed;\n  padding: 15px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.format-selection, .output-selection {\n  margin-bottom: 15px;\n}\n\n.option-row {\n  display: flex;\n  align-items: flex-start;\n  gap: 15px;\n}\n\n.option-label {\n  min-width: 90px;\n  padding-top: 8px;\n}\n\n.option-label h3 {\n  margin: 0;\n  white-space: nowrap;\n}\n\n.option-control {\n  flex: 1;\n  display: flex;\n  gap: 15px;\n  align-items: center;  \n} \n\n.select-wrapper {\n  width: 200px;\n  flex-shrink: 0;\n  position: relative;\n}\n\n.select-wrapper select {\n  width: 100%;\n  padding: 8px 12px;\n  padding-right: 30px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  font-size: 14px;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  cursor: pointer;\n}\n\n.select-wrapper::after {\n  content: '▼';\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  font-size: 12px;\n  color: #666;\n  z-index: 1;\n}\n\n.checkbox-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n}\n\n.checkbox-container input {\n  margin: 0;\n}\n\n.c olor-legend-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: 0;\n}\n\n.format-selection, .output-selection {\n  background: white;\n  padding: 15px;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  margin-bottom: 15px;\n}\n\n.conversion-results {\n  margin-top: 20px;\n  background-color: #f8f8f8;\n  padding: 15px;\n  border-radius: 4px;\n  border-left: 4px solid #4CAF50;\n}\n\n.result-item {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.result-item:last-child {\n  border-bottom: none;\n}\n\n.result-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nh1, h2, h3 {\n  color: #333;\n}\n\nh3 {\n  margin-bottom: 10px;\n  font-size: 1em;\n}\n\n/* Mobile responsive styles */\n@media screen and (max-width: 600px) {\n  .option-row {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .option-label {\n    width: 100%;\n    text-align: left;\n    padding-top: 0;\n  }\n\n  .option-control {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n\n  .select-wrapper {\n    width: 100%;\n  }\n\n  .color-legend-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .result-info {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n  }\n}\n</style>\n","import { render } from \"./ImageConverter.vue?vue&type=template&id=61fb4704&scoped=true\"\nimport script from \"./ImageConverter.vue?vue&type=script&lang=js\"\nexport * from \"./ImageConverter.vue?vue&type=script&lang=js\"\n\nimport \"./ImageConverter.vue?vue&type=style&index=0&id=61fb4704&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61fb4704\"]])\n\nexport default __exports__","<template>\n  \n  <div class=\"page-container\">\n    <div class=\"import-controls-container\">\n      <div class=\"controls-row\">\n        <div class=\"import-controls\">\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\".json,.h\" @change=\"importAreaInfo\" class=\"file-input\">\n            <span class=\"material-icons\">upload_file</span>\n            Import\n          </label>\n          <label class=\"import-btn\" v-if=\"imagePath\">\n            <input type=\"file\" \n              webkitdirectory \n              directory \n              @change=\"importImages\" \n              class=\"file-input\">\n            <span class=\"material-icons\">drive_folder_upload</span>\n            Load Images\n          </label>\n        </div>\n        <div class=\"image-selector\">\n          <!-- <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\"> -->\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" ref=\"fileInput\" class=\"file-input\">\n            <span class=\"material-icons\">file_open</span>\n            Select BG\n          </label>\n          <!-- <button @click=\"triggerFileInput\" class=\"select-image-btn\">\n            Select Image\n          </button> -->\n          <label class=\"switch\" v-if=\"selectedImage\">\n            <span class=\"switch-label\">Edit Mode</span>\n            <input type=\"checkbox\" v-model=\"isEditing\">\n            <span class=\"slider round\"></span>        \n          </label>\n          \n        </div>\n      </div>\n    </div>\n    \n    <span class=\"file-info\" v-if=\"BGName\">\n      <span class=\"material-icons\">description</span>\n      {{ BGName }}\n    </span>\n    <p> </p>\n    <div class=\"image-section\" v-if=\"BGName\">\n      <div class=\"image-container\">          \n        \n        <div v-if=\"selectedImage\" class=\"image-display\">\n          <img \n            :src=\"selectedImage\" \n            useMap=\"#workMap\" \n            class=\"image-map\"\n            @load=\"initializeCanvas\"\n            @click=\"handleImageClick\"\n            @mousedown.prevent=\"startDrawing\"\n            @mousemove.prevent=\"drawing\"\n            @mouseup.prevent=\"endDrawing\"\n            draggable=\"false\"\n          >\n          <map name=\"workMap\" v-if=\"!isEditing\">\n            <area v-for=\"area in areas\"\n                  :key=\"area.id\"\n                  :shape=\"area.shape\"\n                  :coords=\"area.coords\"\n                  :href=\"area.href\"\n                  :alt=\"area.alt\"\n                  @click.prevent\n                  @mouseover=\"highlightArea(area.id)\"\n                  @mouseout=\"removeHighlight()\">\n          </map>\n\n          <!-- 영역 배경 이미지 추가 -->\n          <div v-for=\"area in areas\" \n              :key=\"'bg-'+area.id\" \n              class=\"area-background\"\n              v-show=\"area.visible && area.imageUrl\"\n              :style=\"getAreaBackgroundStyle(area)\">\n            <img v-if=\"area.imageUrl\" :src=\"area.imageUrl\" alt=\"Area background\">\n          </div>\n\n          <canvas \n            ref=\"highlightCanvas\" \n            class=\"highlight-canvas\"\n            @click=\"handleCanvasClick($event)\"\n            :style=\"{ cursor: isEditing ? 'pointer' : 'default' }\">\n          </canvas>\n          \n          <!-- Area Numbers -->\n          <div v-for=\"area in areas\" \n              :key=\"area.id\" \n              class=\"area-number\"\n              :class=\"{ 'selected': selectedAreaId === area.id }\"\n              \n              :style=\"getAreaNumberStyle(area)\">\n            {{ area.id }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Modern Table for Area Coordinates -->\n      <div v-if=\"areas.length > 0\" class=\"area-table-container\">\n        <h3>Area Info</h3>\n        <div class=\"import-controls\">\n          <div class=\"image-path-input\">\n            <input \n              type=\"text\" \n              id=\"imagePath\" \n              v-model=\"imagePath\" \n              placeholder=\"Enter image path\"\n              class=\"path-input\"\n            >\n          </div>\n          \n        </div>\n\n        <table class=\"modern-table\">\n          <thead>\n            <tr>\n              <th>No.</th>\n              <th>X</th>\n              <th>Y</th>\n              <th>Width</th>\n              <th>Height</th>\n              <th>Image</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"area in areas\" :key=\"area.id\" :class=\"{ 'editing-row': isEditingArea(area.id) }\">\n              <td class=\"area-id\">{{ area.id }}</td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).x\"                \n                  @input=\"updateCoord(area.id, 'x', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).y\"\n                  @input=\"updateCoord(area.id, 'y', $event.target.value)\"\n                  class=\"coordinate-input\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).width\"\n                  @input=\"updateCoord(area.id, 'width', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its width' : ''\"\n                >\n              </td>\n              <td>\n                <input \n                  type=\"number\" \n                  v-model.number=\"getAreaCoords(area).height\"\n                  @input=\"updateCoord(area.id, 'height', $event.target.value)\"\n                  class=\"coordinate-input\"\n                  :disabled=\"area.imageUrl\"\n                  :title=\"area.imageUrl ? 'If an image is set, you can\\'t change its height' : ''\"\n                >\n              </td>\n              <td>\n                <div class=\"file-upload-container\">\n                  <label class=\"custom-file-upload\" :title=\"'Select an image for ' + area.id\">\n                    <input \n                      type=\"file\" \n                      accept=\"image/*\"\n                      @change=\"handleAreaImageUpload($event, area.id)\"\n                      class=\"image-upload\"\n                    >\n                    <span class=\"material-icons\">image</span>\n                  </label>\n                  <span class=\"selected-filename\" v-if=\"areaFilenames[area.id]\">\n                    {{ areaFilenames[area.id] }}\n                  </span>\n                </div>\n                <!-- <img \n                  v-if=\"area.imageUrl\" \n                  :src=\"area.imageUrl\" \n                  class=\"area-thumbnail\"\n                  alt=\"Area image\"\n                > -->\n              </td>\n              <td class=\"actions-cell\">\n                <button @click=\"toggleVisibility(area.id)\" class=\"action-btn visibility\" :title=\"area.visible ? 'Hide' : 'Show'\">\n                  <span class=\"material-icons\">{{ area.visible ? 'visibility' : 'visibility_off' }}</span>\n                </button>\n                <button @click=\"deleteArea(area.id)\" class=\"action-btn delete\" :title=\"'Remove area'\">\n                  <span class=\"material-icons\">clear</span>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p ></p>\n\n        <div class=\"export-buttons\">\n          <button @click=\"exportAsJson\" class=\"export-btn\">Save to JSON </button>\n          <button @click=\"exportAsCStruct\" class=\"export-btn\">Save to C Struct</button>\n        </div>\n      </div>\n\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageMap',\n  data() {\n    return {\n      selectedImage: null,\n      areas: [],\n      areaFilenames: {}, // 영역별 실제 파일명 저장\n      isEditing: true,\n      isDrawing: false,\n      startX: 0,\n      startY: 0,\n      currentArea: null,\n      editingAreaId: null,\n      isDragging: false,\n      selectedAreaId: null,\n      dragStartX: 0,\n      dragStartY: 0,\n      imagePath: '',\n      BGName: '',\n      BGSize: ''\n    }\n  },\n  methods: {\n    toggleVisibility(areaId) {\n      const area = this.areas.find(a => a.id === areaId);\n      if (area) {\n        area.visible = !area.visible;\n        this.drawSavedAreas();\n      }\n    },\n\n    handleCanvasClick(event) {\n      if (!this.isEditing) return;\n      \n      const rect = event.target.getBoundingClientRect();\n      const scale = event.target.width / event.target.clientWidth;\n      const x = (event.clientX - rect.left) * scale;\n      const y = (event.clientY - rect.top) * scale;\n\n      // 클릭한 위치에 있는 영역 찾기\n      const clickedArea = this.areas.find(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(Number);\n        return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n      });\n\n      if (clickedArea) {\n        this.selectedAreaId = clickedArea.id;\n        this.highlightArea(clickedArea.id);\n      } else {\n        this.selectedAreaId = null;\n        this.drawSavedAreas();\n      }\n    },\n    selectArea(areaId) {\n      this.selectedAreaId = areaId;\n    },\n    \n    // 이미지 클릭 시 선택 해제\n    handleImageClick(event) {\n      if (event.target.classList.contains('image-map')) {\n        this.selectedAreaId = null;\n      }\n    },\n\n    importImages(event) {\n      const files = Array.from(event.target.files);\n      \n      // Create a map of filenames to their data URLs\n      const imageMap = {};\n      \n      files.forEach(file => {\n        if (file.type.startsWith('image/')) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            imageMap[file.name] = e.target.result;\n            \n            // Set background image if filename matches\n            if (file.name === this.BGName) {\n              this.selectedImage = e.target.result;\n            }\n            \n            // Set area images if filename matches\n            this.areas.forEach(area => {\n              if (this.areaFilenames[area.id] === file.name) {\n                area.imageUrl = e.target.result;\n              }\n            });\n          };\n          reader.readAsDataURL(file);\n        }\n      });\n    },\n\n    importAreaInfo(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = async(e) => {\n        const content = e.target.result;\n        \n        if (file.name.endsWith('.json')) {\n          await this.importFromJson(content);\n        } else if (file.name.endsWith('.h')) {\n          await this.importFromCStruct(content);\n        }\n\n        \n      };\n      reader.readAsText(file);\n    },\n\n    clearAllAreas() {\n      this.areas = [];\n      this.areaFilenames = {}; // 관련 파일명 정보도 함께 지우기\n      //this.drawSavedAreas(); // 캔버스 다시 그리기\n    },\n\n    importFromJson(content) {\n      try {\n        const data = JSON.parse(content);\n\n        // Set image path if available\n        this.imagePath = data.imagePath || '';\n        this.BGName = data.BGName || '';\n\n        // Check if data is in the new format (with imagePath) or old format (just array of areas)\n        let areasData;\n\n        if (Array.isArray(data)) {\n          // Old format - direct array of areas\n          areasData = data;\n          this.imagePath = ''; // Reset image path\n        } else if (data && typeof data === 'object') {\n          // New format with imagePath\n          this.imagePath = data.imagePath || '';\n          \n          // Check if areas property exists and is an array\n          if (data.areas && Array.isArray(data.areas)) {\n            areasData = data.areas;\n          } else {\n            // Try to use the whole object as area data\n            areasData = [data];\n          }\n        } else {\n          throw new Error('Invalid JSON structure');\n        }\n\n        this.clearAllAreas();\n        \n        // Process the areas data\n        this.areas = areasData.map(item => {\n          // Make sure coordinates exist\n          if (!item.coordinates) {\n            console.error('Missing coordinates in area:', item);\n            return null;\n          }\n          \n          return {\n            id: item.id || 0,\n            shape: 'rect',\n            coords: `${item.coordinates.x},${item.coordinates.y},${item.coordinates.x + item.coordinates.width},${item.coordinates.y + item.coordinates.height}`,\n            href: '#',\n            alt: `Area ${item.id || 0}`,\n            imageUrl: null,\n            visible: item.visible !== undefined ? item.visible : true\n          };\n        }).filter(area => area !== null); // Remove any null entries\n        \n        // 파일명 정보 복원\n        this.areaFilenames = {};\n        areasData.forEach(item => {\n          if (item.id && item.filename) {\n            this.areaFilenames[item.id] = item.filename;\n          }\n        });\n\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage)\n           {\n            this.drawSavedAreas();\n          }\n        });\n        \n        //console.log('Successfully imported JSON data:', { areas: this.areas, imagePath: this.imagePath });\n      } catch (error) {\n        console.error('Error importing JSON:', error);\n        alert('The JSON file format is not correct:' + error.message);\n      }\n    },\n\n    importFromCStruct(content) {\n      try {\n        // Extract image path if available\n        const imagePathMatch = content.match(/#define IMAGE_PATH \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ Image Path: (.+)/);\n        if (imagePathMatch && imagePathMatch[1]) {\n          this.imagePath = imagePathMatch[1];\n        }\n\n        const BGNameMatch = content.match(/#define BGName \"([^\"]*)\"/) || \n                              content.match(/\\/\\/ BG Name: (.+)/);\n        if (BGNameMatch && BGNameMatch[1]) {\n          this.BGName = BGNameMatch[1];\n        }\n\n        // C struct 파싱을 위한 정규식 수정\n        const areaRegex = /{\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*\"([^\"]*)\"\\s*,\\s*(\\d+)\\s*}/g;\n        //const areas = [];\n        let match;\n\n        this.clearAllAreas();\n\n        while ((match = areaRegex.exec(content)) !== null) {\n          const id = parseInt(match[1]);\n          const x = parseInt(match[2]);\n          const y = parseInt(match[3]);\n          const width = parseInt(match[4]);\n          const height = parseInt(match[5]);\n          const filename = match[6];\n          const visible = match[7] === \"1\"; // 1이면 true, 0이면 false\n          \n          this.areas.push({\n            id: id,\n            shape: 'rect',\n            coords: `${x},${y},${x + width},${y + height}`,\n            href: '#',\n            alt: `Area ${id}`,\n            imageUrl: null,\n            visible: visible\n          });          \n          \n          // 파일명 정보 저장\n          if (filename) {\n            this.areaFilenames[id] = filename;\n          }\n\n          console.log('Imported area:', { id, x, y, width, height, filename, visible });\n        }\n\n        // 영역이 하나도 매칭되지 않았을 경우 로그 출력\n        if (this.areas.length === 0) {\n          console.error('No areas found in the C struct file. Content:', content);\n          alert('No valid areas found in the C struct file.');\n          return;\n        }\n\n        // 캔버스가 준비되었을 때만 drawSavedAreas 호출\n        this.$nextTick(() => {\n          if (this.$refs.highlightCanvas && this.selectedImage) {\n            this.drawSavedAreas();\n          }\n        });\n        console.log('Successfully imported C struct data:', this.areas);\n      } catch (error) {\n        console.error('Error importing C struct:', error);\n        alert('The C Struct file format is not correct: ' + error.message);\n      }\n    },\n    \n    exportAsJson() {      \n      const exportData = {\n        imagePath: this.imagePath,\n        BGName: this.BGName,\n          areas: this.areas.map(area => ({\n          id: area.id,\n          coordinates: this.getAreaCoords(area),\n          filename: this.areaFilenames[area.id] || '',\n          visible: area.visible\n        }))\n      };\n            \n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      this.downloadFile(blob, 'image_map_areas.json');\n    },\n  \n    exportAsCStruct() {\n      let structContent = '// Image Path: ' + this.imagePath + '\\n';\n      structContent += '// BG Name: ' + this.BGName + '\\n\\n';\n      structContent += 'typedef struct {\\n';\n      structContent += '    int id;\\n';\n      structContent += '    int x;\\n';\n      structContent += '    int y;\\n';\n      structContent += '    int width;\\n';\n      structContent += '    int height;\\n';\n      structContent += '    char filename[256];\\n';\n      structContent += '    int visible;\\n';\n      structContent += '} Area;\\n\\n';\n      \n      structContent += '#define IMAGE_PATH \"' + this.imagePath + '\"\\n';\n      structContent += '#define BGName \"' + this.BGName + '\"\\n\\n';\n      structContent += 'Area areas[] = {\\n';\n      this.areas.forEach(area => {\n        const coords = this.getAreaCoords(area);\n        const filename = this.areaFilenames[area.id] || '';\n        structContent += `    {${area.id}, ${coords.x}, ${coords.y}, ${coords.width}, ${coords.height}, \"${filename}\", ${area.visible ? 1 : 0}},\\n`;\n      });\n      structContent += '};\\n';\n      \n      const blob = new Blob([structContent], { type: 'text/plain' });\n      this.downloadFile(blob, 'image_map_areas.h');\n    },\n    \n    downloadFile(blob, filename) {\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n\n    getAreaBackgroundStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        position: 'absolute',\n        left: `${coords.x}px`,\n        top: `${coords.y}px`,\n        width: `${coords.width}px`,\n        height: `${coords.height}px`,\n        overflow: 'hidden'\n      }\n    },\n\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n\n    formatFileSize(bytes){\n      const units = ['B', 'KB', 'MB', 'GB']\n      let size = bytes\n      let unitIndex = 0\n      \n      while (size >= 1024 && unitIndex < units.length - 1) {\n        size /= 1024\n        unitIndex++\n      }\n      \n      return `${size.toFixed(1)} ${units[unitIndex]}`\n    },\n\n    handleImageUpload(event) {\n      const file = event.target.files[0]\n      if (file && file.type.startsWith('image/')) {\n        //console.log('file path : %s', file.name)\n        this.BGName = file.name\n        this.BGSize = this.formatFileSize(file.size)\n\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          this.selectedImage = e.target.result\n          this.$emit('image-selected', file)\n        }\n        reader.readAsDataURL(file)\n        this.isEditing = true\n      }\n    },\n    toggleEditMode() {\n      this.isEditing = !this.isEditing\n    },\n    drawSavedAreas() {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.areas.forEach(area => {\n        const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n        const width = x2 - x1\n        const height = y2 - y1\n        \n        // 흰색 테두리\n        ctx.strokeStyle = 'white'\n        ctx.lineWidth = 2\n        ctx.setLineDash([])\n        ctx.strokeRect(x1, y1, width, height)\n        \n        // 검은색 점선 테두리\n        ctx.strokeStyle = 'black'\n        ctx.lineWidth = 1\n        ctx.setLineDash([4, 4])\n        ctx.strokeRect(x1, y1, width, height)\n      })\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    startDrawing(event) {\n      if (!this.isEditing) return\n      \n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      this.startX = Math.round((event.clientX - rect.left) * scale)\n      this.startY = Math.round((event.clientY - rect.top) * scale)\n      this.isDrawing = true\n      \n      this.currentArea = {\n        startX: this.startX,\n        startY: this.startY\n      }\n    },\n    drawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const currentX = Math.round((event.clientX - rect.left) * scale)\n      const currentY = Math.round((event.clientY - rect.top) * scale)\n\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      \n      this.drawSavedAreas()\n      \n      const width = currentX - this.currentArea.startX\n      const height = currentY - this.currentArea.startY\n      \n      // ctx.fillStyle = 'rgba(0, 0, 0, 0.3)'\n      // ctx.fillRect(\n      //   this.currentArea.startX,\n      //   this.currentArea.startY,\n      //   width,\n      //   height\n      // )\n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'\n      ctx.fillRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n  \n      // 이중 테두리 그리기 (흰색과 검은색)\n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      \n      // 검은색 테두리 (점선)\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(\n        this.currentArea.startX,\n        this.currentArea.startY,\n        width,\n        height\n      )\n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n    handleAreaImageUpload(event, areaId) {\n      const file = event.target.files[0]\n      if (file && file.type.startsWith('image/')) {\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          const area = this.areas.find(a => a.id === areaId)\n          // 이미지 로드 후 원본 크기 가져오기\n          const img = new Image()\n          img.onload = () => {\n            const coords = this.getAreaCoords(area)\n            area.imageUrl = e.target.result\n            area.coords = `${coords.x},${coords.y},${coords.x + img.width},${coords.y + img.height}`\n            this.areaFilenames[areaId] = file.name // 실제 파일명 저장\n            \n            this.drawSavedAreas()\n          }\n          img.src = e.target.result\n        }\n        reader.readAsDataURL(file)\n      }\n    },\n    endDrawing(event) {\n      if (!this.isDrawing || !this.isEditing) return\n\n      const rect = event.target.getBoundingClientRect()\n      const scale = event.target.naturalWidth / event.target.clientWidth\n      \n      const endX = Math.round((event.clientX - rect.left) * scale)\n      const endY = Math.round((event.clientY - rect.top) * scale)\n\n      if (Math.abs(endX - this.currentArea.startX) < 10 || \n          Math.abs(endY - this.currentArea.startY) < 10) {\n        this.isDrawing = false\n        this.drawSavedAreas()\n        return\n      }\n\n      const newArea = {\n        id: this.areas.length + 1,\n        shape: 'rect',\n        coords: `${this.currentArea.startX},${this.currentArea.startY},${endX},${endY}`,\n        href: '#',\n        alt: `Area ${this.areas.length + 1}`,\n        imageUrl: null, // 이미지 URL 속성 추가\n        visible: true\n      }\n\n      this.areas.push(newArea)\n      this.isDrawing = false\n      this.drawSavedAreas()\n    },\n\n    highlightArea(areaId) {\n      const canvas = this.$refs.highlightCanvas\n      const ctx = canvas.getContext('2d')\n      \n      this.drawSavedAreas()\n      \n      const area = this.areas.find(a => a.id === areaId)\n      const [x1, y1, x2, y2] = area.coords.split(',').map(num => Math.round(Number(num)))\n      const width = x2 - x1\n      const height = y2 - y1\n      \n      // 반투명 채우기\n      ctx.fillStyle = 'rgba(0, 255, 0, 0.3)'\n      ctx.fillRect(x1, y1, width, height)\n      \n      // 흰색 테두리\n      ctx.strokeStyle = 'white'\n      ctx.lineWidth = 2\n      ctx.setLineDash([])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      // 검은색 점선 테두리\n      ctx.strokeStyle = 'black'\n      ctx.lineWidth = 1\n      ctx.setLineDash([4, 4])\n      ctx.strokeRect(x1, y1, width, height)\n      \n      ctx.setLineDash([]) // 대시 패턴 초기화\n    },\n\n    removeHighlight() {\n      this.drawSavedAreas()\n    },\n\n    initializeCanvas() {\n      const img = event.target\n      const canvas = this.$refs.highlightCanvas\n      canvas.width = img.width\n      canvas.height = img.height\n      this.drawSavedAreas()\n    },\n    getAreaCoords(area) {\n      const [x1, y1, x2, y2] = area.coords.split(',').map(Number)\n      return {\n        x: Math.min(x1, x2),\n        y: Math.min(y1, y2),\n        width: Math.abs(x2 - x1),\n        height: Math.abs(y2 - y1)\n      }\n    },\n    getAreaNumberStyle(area) {\n      const coords = this.getAreaCoords(area)\n      return {\n        left: `${coords.x}px`,\n        top: `${coords.y}px`\n      }\n    },\n    deleteArea(areaId) {\n      this.areas = this.areas.filter(area => area.id !== areaId)\n      this.drawSavedAreas()\n    },\n    toggleEdit(areaId) {\n      this.editingAreaId = this.editingAreaId === areaId ? null : areaId\n    },\n    isEditingArea(areaId) {\n      return this.editingAreaId === areaId\n    },\n\n    updateCoord(areaId, type, value) {\n        const area = this.areas.find(a => a.id === areaId)\n        const coords = this.getAreaCoords(area)\n        \n        // 입력값이 숫자가 아니거나 음수인 경우 0으로 처리\n        value = (!value || isNaN(value) || value < 0) ? 0 : parseInt(value)\n        \n        switch(type) {\n        case 'x':\n            area.coords = `${value},${coords.y},${value + coords.width},${coords.y + coords.height}`\n            break\n        case 'y':\n            area.coords = `${coords.x},${value},${coords.x + coords.width},${value + coords.height}`\n            break\n        case 'width':\n            area.coords = `${coords.x},${coords.y},${coords.x + value},${coords.y + coords.height}`\n            break\n        case 'height':\n            area.coords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + value}`\n            break\n        }\n        \n        this.drawSavedAreas()\n    },\n\n    // updateAreaCoords(areaId) {\n    //     const area = this.areas.find(a => a.id === areaId)\n    // const coords = this.getAreaCoords(area)\n    // const newCoords = `${coords.x},${coords.y},${coords.x + coords.width},${coords.y + coords.height}`\n    \n    // // 영역 좌표 직접 업데이트\n    // area.coords = newCoords\n    \n    // // 캔버스 다시 그리기\n    // this.$nextTick(() => {\n    //   this.drawSavedAreas()\n    // })\n    // }\n  }\n}\n</script>\n\n<style scoped>\n.file-info {\n  display: inline-flex;\n  align-items: center;\n  padding: 8px 12px;\n  background: #E3F2FD;\n  border-radius: 4px;\n  color: #1976D2;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.25px;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.file-info .material-icons {\n  font-size: 16px;\n  margin-right: 8px;\n}\n\n.action-btn.visibility {\n  background-color: #2196F3;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.visibility:hover {\n  background-color: #0b7dda;\n}\n\n.action-btn.visibility .material-icons {\n  font-size: 18px;\n}\n\n.action-btn.delete {\n  background-color: #ff4444;\n  color: white;\n  padding: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn.delete:hover {\n  background-color: #cc0000;\n}\n\n.action-btn.delete .material-icons {\n  font-size: 18px;\n}\n\n.import-controls-container {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.controls-row {\n  display: flex;\n  /* justify-content: space-between; */\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 15px;\n}\n\n.import-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.image-path-input {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-grow: 1;\n}\n\n.path-input {\n  flex-grow: 1;\n  padding: 8px 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.path-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.draggable {\n  cursor: move;\n  pointer-events: all;\n}\n\n.area-background {\n  pointer-events: none;\n  z-index: 1;\n}\n\n.area-background.draggable {\n  pointer-events: all;\n}\n\n.area-background img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.page-container {\n  /* display: flex; */\n  gap: 20px;\n  /* align-items: flex-start; */\n}\n\n.image-section {\n  flex: 1;\n  min-width: 0; /* 이미지가 컨테이너를 벗어나지 않도록 */\n}\n\n.image-selector {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.file-input {\n  display: none;\n}\n\n.select-image-btn {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.select-image-btn:hover {\n  background-color: #45a049;\n}\n\n.image-container {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  \n  border-radius: 4px;\n  background: #fff;  \n  padding: 8px;\n}\n\n.image-display {\n  position: relative;\n  overflow: auto; /* 이미지가 컨테이너보다 클 경우 스크롤바 표시 */\n  max-height: 80vh; /* 뷰포트 높이의 80%로 최대 높이 제한 (선택사항) */\n  background-image: \n    url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20'%3E%3Crect width='10' height='10' fill='%23ccc'/%3E%3Crect x='10' y='10' width='10' height='10' fill='%23ccc'/%3E%3C/svg%3E\");\n}\n\n.image-map {\n  /* max-width: 100%;\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none; */\n  max-width: none; /* max-width: 100% 제거 */\n  width: auto; /* 원본 크기 유지 */\n  height: auto;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.highlight-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n\n /* switch 스타일 */\n .switch {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  background-color: #ccc;\n  border-radius: 24px;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  border-radius: 50%;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(26px);\n}\n\n.switch-label {\n  margin-left: 10px;\n  font-size: 14px;\n  color: #333;\n}\n\n/* */\n\n.area-number {\n  position: absolute; \n  padding: 2px 6px;\n  /* border-radius: 0px; */\n  font-size: 12px;\n  font-weight: bold;\n  /* margin-top: 3px;\n  margin-left: 3px; */\n  z-index: 2;\n  background-color: white; /* 배경색을 흰색으로 설정 */\n  color: black; /* 글자색을 검정색으로 설정 */\n  mix-blend-mode: difference; /* 배경과 반대되는 색상으로 표시 */\n  transition: background-color 0.3s ease;\n}\n\n.area-number.selected {\n  background-color: rgba(76, 175, 80, 0.6); /* 선택된 영역 강조 색상 */\n  font-weight: bold;\n  mix-blend-mode: normal; /* 선택된 경우 일반 모드로 표시 */\n}\n\n/* Modern Table Styles */\n.area-table-container {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.modern-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin-top: 15px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n  font-size: 12px;\n}\n\n.modern-table thead th {\n  background-color: #d0d0d0;\n  color: #4a5568;\n  font-weight: 600;  \n  text-align: left;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 0.8em;\n  padding: 8px;\n  /* font-size: 12px; */\n}\n\n.modern-table tbody td {\n  padding: 8px;\n  border-bottom: 1px solid #e2e8f0;\n  vertical-align: middle;\n}\n\n.modern-table tbody tr:last-child td {\n  border-bottom: none;\n}\n\n.modern-table tbody tr:hover {\n  background-color: #eff0f1;\n}\n\n/* 각 컬럼 너비 조정 */\n.modern-table td:nth-child(1) { /* No. */\n  width: 20px;\n}\n\n.modern-table td:nth-child(2), /* X */\n.modern-table td:nth-child(3), /* Y */\n.modern-table td:nth-child(4), /* Width */\n.modern-table td:nth-child(5) { /* Height */\n  width: 50px;\n}\n\n.modern-table td:nth-child(6) { /* Image */\n  width: 200px;\n}\n\n.modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n.coordinate-input {\n  padding: 4px 8px;  \n  font-size: 12px;\n  margin: 0 4px;\n  width: calc(100% - 16px); /* 패딩과 마진을 고려한 너비 조정 */\n}\n\n/* .action-btn {\n  padding: 4px 8px;\n  font-size: 12px;  \n} */\n\n.editing-row {\n  background-color: #f0fff4 !important;\n}\n\n\n.coordinate-input::-webkit-outer-spin-button,\n.coordinate-input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.coordinate-input[type=number] {\n  -moz-appearance: textfield;\n}\n\n\n.coordinate-input:disabled {\n  background-color: #f5f5f5;\n  border-color: #e2e8f0;\n  cursor: not-allowed;\n  color: #4a5568;\n}\n\n.coordinate-input:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.area-id {\n  font-weight: 600;\n  font-size: 0.9em;\n  color: #2c3e50;\n  text-align: center;\n}\n\n.actions-cell {\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n}\n\n.action-btn {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9em;\n  transition: all 0.2s;\n}\n\n.action-btn.edit {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.action-btn.edit:hover {\n  background-color: #45a049;\n}\n\n.image-upload {\n  min-width: 120px;\n}\n\n.area-thumbnail {\n  max-width: 50px;\n  max-height: 50px;\n  object-fit: cover;\n  margin-top: 5px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n/* 테이블 셀 너비 조정 */\n.modern-table td {\n  min-width: 80px;\n  padding: 8px 12px; /* 좌우 패딩 증가 */\n}\n\n/* export-buttons */\n.export-buttons {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.export-btn {\n  padding: 8px 16px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #1976D2;\n}\n\n.file-upload-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.selected-filename {\n  font-size: 12px;\n  color: #666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.custom-file-upload:hover {\n  background-color: #e9ecef;\n}\n\n.custom-file-upload .material-icons {\n  font-size: 18px;\n  color: #666;\n}\n\n.image-upload {\n  display: none;\n}\n\n.import-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.import-btn:hover {\n  background-color: #45a049;\n}\n\n.import-btn .material-icons {\n  font-size: 18px;\n}\n\n@media screen and (max-width: 768px) {\n  .modern-table thead {\n    display: none;\n  }\n\n  .modern-table tbody tr {\n    display: grid;\n    grid-template-columns: auto auto auto auto;\n    padding: 8px;\n    border-bottom: 1px solid #e2e8f0;\n  }\n\n  .modern-table tr:nth-child(even) {\n    background-color: #f8f9fa;\n  }\n\n  .modern-table td {\n    padding: 4px;\n    border: none;\n    text-align: center;\n  }\n\n  /* 첫째 줄: No, X, Y, Width, Height */\n  .modern-table td:nth-child(1),\n  .modern-table td:nth-child(2),\n  .modern-table td:nth-child(3),\n  .modern-table td:nth-child(4),\n  .modern-table td:nth-child(5) {\n    grid-row: 1;\n    width: 40px;\n  }\n\n  /* 둘째 줄: , Image, Actions */ \n  .modern-table td:nth-child(6) {\n    grid-row: 2;\n    grid-column: 2 / span 2;\n  }\n\n  .modern-table td:first-child,\n.modern-table th:first-child {\n  width: 40px;\n  min-width: 40px;\n  text-align: center;\n}\n\n  .modern-table td:last-child {\n    grid-row: 2;\n    grid-column: 4;\n    padding-right: 16px;\n  }\n\n  \n}\n</style>","import { render } from \"./ImageMap.vue?vue&type=template&id=4c156f6a&scoped=true\"\nimport script from \"./ImageMap.vue?vue&type=script&lang=js\"\nexport * from \"./ImageMap.vue?vue&type=script&lang=js\"\n\nimport \"./ImageMap.vue?vue&type=style&index=0&id=4c156f6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c156f6a\"]])\n\nexport default __exports__","<template>  \n  <div class=\"binary-viewer\">\n    <!-- <h2>Binary file viewer</h2> -->\n    <div class=\"viewer-container\">\n      <!-- 파일 선택 영역 -->\n      <div class=\"file-section\">\n        <!-- <input type=\"file\" @change=\"onFileSelect\" ref=\"fileInput\" style=\"display: none\">\n        <button @click=\"fileInput.click()\" class=\"primary-btn\">Select File</button> -->\n        <div class=\"file-input-container\">\n          <label class=\"import-btn\">\n            <input type=\"file\" accept=\"*/*\" @change=\"onFileSelect\" class=\"file-input\">\n            <span class=\"material-icons\">file_open</span>\n            Open File\n          </label>\n          <span class=\"file-info\">\n            {{ fileName ? `${fileName} (${fileSize})` : \"Intel HEX file automatically convert\" }}\n          </span>\n        </div>\n        \n        <!-- 인텔 헥사 파일인 경우에만 Export BIN 버튼 표시 -->     \n        <div class=\"file-export-container\">\n          <label class=\"export-btn\" v-if=\"isHexFile && hexData\">\n            <input  @click=\"exportBinary\" class=\"file-input\">\n            <span class=\"material-icons\">file_download</span> \n            Export BIN\n          </label>\n        </div>\n        \n      </div>\n\n      <!-- 파일 형식 선택 -->\n      <div class=\"format-section\" v-if=\"isHexFile\">\n        <label>\n          <input type=\"radio\" v-model=\"fileFormat\" value=\"binary\"> Binary\n        </label>\n        <label>\n          <input type=\"radio\" v-model=\"fileFormat\" value=\"hex\"> Intel HEX\n        </label>\n      </div>\n\n      <!-- 로딩 표시 -->\n      <div v-if=\"isLoading\" class=\"loading-section\">\n        <div class=\"progress-bar\">\n          <div class=\"progress\" :style=\"{ width: `${progress}%` }\"></div>\n        </div>\n        <span>File loading... {{ progress }}%</span>\n      </div>\n\n      <!-- 컨트롤 영역 -->\n      <div v-if=\"fileContent\" class=\"control-section\">\n        <div class=\"left-controls\">\n          <label>\n            <input type=\"checkbox\" v-model=\"showAscii\"> Show ASCII\n          </label>\n          <label>\n            <span style=\"padding-right: 10px;\">Bytes/Line</span>\n            <select  v-model=\"bytesPerLine\">\n              <option :value=\"8\">8</option>\n              <option :value=\"16\">16</option>\n              <!-- <option :value=\"32\">32</option> -->\n            </select>\n          </label>\n        </div>\n        <div class=\"right-controls\">\n          <!-- <input \n            type=\"text\" \n            v-model=\"searchText\"\n            placeholder=\"16진수 검색 (예: FF 00)\"\n            class=\"search-input\"\n            @keyup.enter=\"search\"\n          > \n          <button @click=\"search\" class=\"primary-btn\">검색</button>-->\n        </div>\n      </div>\n\n      <!-- 16진수 표시 영역 -->\n      <div v-if=\"fileContent\" class=\"hex-view\" ref=\"hexView\">\n        <div class=\"hex-content\" :style=\"{ height: `${totalHeight}px` }\">\n          <div \n            class=\"viewport\" \n            :style=\"{ transform: `translateY(${scrollOffset}px)` }\"\n          >\n            <div \n              v-for=\"line in visibleLines\" \n              :key=\"line.index\"\n              class=\"hex-line\"\n            >\n              <!-- 주소 -->\n              <div class=\"address\">{{ formatAddress(line.offset) }}</div>\n              \n              <!-- 16진수 값 -->\n              <div class=\"hex-values\">\n                <span \n                  v-for=\"(byte, byteIndex) in line.bytes\" \n                  :key=\"byteIndex\"\n                  :class=\"[\n                    'hex-byte', \n                    { \n                      highlighted: isHighlighted(line.offset + byteIndex),\n                      selected: isSelected(line.offset + byteIndex)\n                    }\n                  ]\"\n                  @click=\"selectByte(line.offset + byteIndex)\"\n                >{{ formatByte(byte) }}</span>\n              </div>\n              \n              <!-- ASCII 값 -->\n              <div v-if=\"showAscii\" class=\"ascii-values\">\n                <span \n                  v-for=\"(byte, byteIndex) in line.bytes\" \n                  :key=\"byteIndex\"\n                  :class=\"{ \n                    highlighted: isHighlighted(line.offset + byteIndex),\n                    selected: isSelected(line.offset + byteIndex)\n                  }\"\n                  @click=\"selectByte(line.offset + byteIndex)\"\n                >{{ toAscii(byte) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, nextTick, watch } from 'vue'\n\n// 상수\nconst CHUNK_SIZE = 1024 * 1024 // 1MB\nconst LINE_HEIGHT = 16 // 20px에서 16px로 줄임\nconst CACHE_SIZE = 10 * 1024 * 1024 // 10MB 캐시 크기\n\n// refs\nconst hexView = ref(null)\nconst fileContent = ref(null)\nconst fileName = ref('')\nconst fileSize = ref('')\nconst isLoading = ref(false)\nconst progress = ref(0)\nconst showAscii = ref(true)\nconst bytesPerLine = ref(16)\n//const searchText = ref('')\nconst highlightedBytes = ref(new Set())\nconst startLine = ref(0)\nconst selectedFile = ref(null)\nconst chunksCache = ref(new Map()) // 청크 캐시\nconst visibleLinesData = ref([])\nconst selectedByte = ref(null)\nconst fileFormat = ref('binary') // 'binary' 또는 'hex'\nconst hexData = ref(null) // 인텔 헥사 파일 데이터를 저장\nconst isHexFile = ref(false)\n\n// 계산된 속성\nconst visibleLines = computed(() => {\n  return visibleLinesData.value\n})\n\nconst totalLines = computed(() => {\n  if (!selectedFile.value && !hexData.value) return 0\n  \n  if (fileFormat.value === 'hex' && hexData.value) {\n    const fullLines = Math.floor(hexData.value.length / bytesPerLine.value)\n    const hasRemainder = hexData.value.length % bytesPerLine.value > 0\n    return fullLines + (hasRemainder ? 1 : 0)\n  }\n  \n  const fullLines = Math.floor(selectedFile.value.size / bytesPerLine.value)\n  const hasRemainder = selectedFile.value.size % bytesPerLine.value > 0\n  return fullLines + (hasRemainder ? 1 : 0)\n})\n\nconst totalHeight = computed(() => {\n  return totalLines.value * LINE_HEIGHT\n})\n\nconst scrollOffset = computed(() => {\n  return Math.max(0, startLine.value) * LINE_HEIGHT\n})\n\n// 메서드\nconst formatAddress = (offset) => offset.toString(16).padStart(8, '0').toUpperCase()\nconst formatByte = (byte) => {\n  if (byte === undefined) return '  '\n  return byte.toString(16).padStart(2, '0').toUpperCase()\n}\n\nconst toAscii = (byte) => {\n  if (byte === undefined) return ' '\n  return byte >= 32 && byte <= 126 ? String.fromCharCode(byte) : '.'\n}\nconst isHighlighted = (index) => highlightedBytes.value.has(index)\n\nconst formatFileSize = (bytes) => {\n  const units = ['B', 'KB', 'MB', 'GB']\n  let size = bytes\n  let unitIndex = 0\n  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024\n    unitIndex++\n  }\n  \n  return `${size.toFixed(1)} ${units[unitIndex]}`\n}\n\n// 인텔 헥사 파일 파싱 함수\nconst parseIntelHex = (text) => {\n  const lines = text.split(/\\r?\\n/).filter(line => line.trim().length > 0)\n  const memory = new Uint8Array(16 * 1024 * 1024) // 16MB 메모리 공간 할당\n  let maxAddress = 0\n  let baseAddress = 0\n  \n  for (const line of lines) {\n    if (line[0] !== ':') continue // 인텔 헥사 라인은 항상 ':'로 시작\n    \n    const byteCount = parseInt(line.substr(1, 2), 16)\n    const address = parseInt(line.substr(3, 4), 16)\n    const recordType = parseInt(line.substr(7, 2), 16)\n    \n    // 레코드 타입에 따른 처리\n    switch (recordType) {\n      case 0: // 데이터 레코드\n        for (let i = 0; i < byteCount; i++) {\n          const byte = parseInt(line.substr(9 + i * 2, 2), 16)\n          const absoluteAddress = baseAddress + address + i\n          memory[absoluteAddress] = byte\n          maxAddress = Math.max(maxAddress, absoluteAddress)\n        }\n        break\n      case 1: // 파일 끝 레코드\n        break\n      case 2: // 확장 세그먼트 주소 레코드\n        baseAddress = parseInt(line.substr(9, 4), 16) * 16\n        break\n      case 4: // 확장 선형 주소 레코드\n        baseAddress = parseInt(line.substr(9, 4), 16) * 65536\n        break\n      // 다른 레코드 타입은 필요에 따라 추가\n    }\n  }\n  \n  // 실제 사용된 메모리만 반환\n  return memory.slice(0, maxAddress + 1)\n}\n\n// 바이너리 파일로 내보내기 함수\nconst exportBinary = () => {\n  if (!hexData.value) return\n  \n  // Uint8Array를 Blob으로 변환\n  const blob = new Blob([hexData.value], { type: 'application/octet-stream' })\n  \n  // 다운로드 링크 생성\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  \n  // 원본 파일 이름에서 .hex를 제거하고 .bin 확장자 추가\n  const originalName = fileName.value\n  const baseName = originalName.toLowerCase().endsWith('.hex') \n    ? originalName.slice(0, -4) \n    : originalName\n  \n  a.download = `${baseName}.bin`\n  \n  // 링크 클릭하여 다운로드 시작\n  document.body.appendChild(a)\n  a.click()\n  \n  // 정리\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 0)\n}\n\nconst loadLinesRange = async (start, end) => {\n  const lines = []\n  \n  if (fileFormat.value === 'hex' && hexData.value) {\n    // 인텔 헥사 데이터 처리\n    //const startOffset = start * bytesPerLine.value\n    //const endOffset = Math.min(end * bytesPerLine.value, hexData.value.length)\n    \n    for (let i = start; i < end; i++) {\n      const offset = i * bytesPerLine.value\n      if (offset >= hexData.value.length) break\n      \n      const remainingBytes = hexData.value.length - offset\n      const lineLength = Math.min(bytesPerLine.value, remainingBytes)\n      const bytes = Array.from(hexData.value.slice(offset, offset + lineLength))\n      \n      lines.push({\n        index: i,\n        offset,\n        bytes\n      })\n    }\n  } else {\n    // 기존 바이너리 파일 처리\n    const startOffset = start * bytesPerLine.value\n    const endOffset = Math.min(end * bytesPerLine.value, selectedFile.value.size)\n    \n    // 필요한 청크들을 로드\n    await ensureChunksLoaded(startOffset, endOffset)\n    \n    // 마지막 라인 번호 계산\n    const fullLines = Math.floor(selectedFile.value.size / bytesPerLine.value)\n    const hasRemainder = selectedFile.value.size % bytesPerLine.value > 0\n    const lastLine = fullLines + (hasRemainder ? 0 : -1)\n    \n    for (let i = start; i <= lastLine && i < end; i++) {\n      const offset = i * bytesPerLine.value\n      if (offset >= selectedFile.value.size) break\n      \n      const remainingBytes = selectedFile.value.size - offset\n      const lineLength = Math.min(bytesPerLine.value, remainingBytes)\n      const bytes = await getBytes(offset, lineLength)\n      \n      lines.push({\n        index: i,\n        offset,\n        bytes\n      })\n    }\n  }\n  \n  return lines\n}\n\n\nconst getChunkKey = (offset) => {\n  return Math.floor(offset / CHUNK_SIZE) * CHUNK_SIZE\n}\n\nconst ensureChunksLoaded = async (startOffset, endOffset) => {\n  const startChunk = getChunkKey(startOffset)\n  const endChunk = getChunkKey(endOffset)\n  \n  for (let offset = startChunk; offset <= endChunk; offset += CHUNK_SIZE) {\n    if (!chunksCache.value.has(offset)) {\n      await loadChunk(offset)\n    }\n  }\n  \n  // 캐시 크기 관리\n  while (getCacheSize() > CACHE_SIZE) {\n    const oldestKey = chunksCache.value.keys().next().value\n    chunksCache.value.delete(oldestKey)\n  }\n}\n\nconst getCacheSize = () => {\n  let size = 0\n  for (const chunk of chunksCache.value.values()) {\n    size += chunk.length\n  }\n  return size\n}\n\nconst loadChunk = async (offset) => {\n  const chunk = selectedFile.value.slice(\n    offset,\n    Math.min(offset + CHUNK_SIZE, selectedFile.value.size)\n  )\n  const buffer = await readChunk(chunk)\n  chunksCache.value.set(offset, new Uint8Array(buffer))\n}\n\nconst getBytes = async (offset, length) => {\n  const chunkOffset = getChunkKey(offset)\n  const chunk = chunksCache.value.get(chunkOffset)\n  if (!chunk) return new Array(length).fill(undefined)\n  \n  const relativeOffset = offset - chunkOffset\n  const bytes = chunk.slice(relativeOffset, relativeOffset + length)\n  \n  // 파일 끝을 넘어가는 부분은 제거\n  if (offset + bytes.length > selectedFile.value.size) {\n    bytes.length = selectedFile.value.size - offset\n  }\n  \n  return Array.from(bytes)\n}\n\nconst onFileSelect = async (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  fileName.value = file.name\n  fileSize.value = formatFileSize(file.size)\n  selectedFile.value = file\n  chunksCache.value.clear()\n  startLine.value = 0\n  isLoading.value = true\n  progress.value = 0\n  \n  // 파일 확장자가 .hex인지 확인\n  isHexFile.value = file.name.toLowerCase().endsWith('.hex')\n  \n  // 인텔 헥사 파일이 아니면 바이너리 모드로 고정\n  if (!isHexFile.value) {\n    fileFormat.value = 'binary'\n  } else {\n    // 인텔 헥사 파일이면 기본적으로 hex 모드로 설정\n    fileFormat.value = 'hex'\n    try {\n      // 인텔 헥사 파일 처리\n      const text = await readTextFile(file)\n      hexData.value = parseIntelHex(text)\n      fileSize.value = formatFileSize(hexData.value.length)\n    } catch (error) {\n      console.error('인텔 헥사 파일 파싱 오류:', error)\n      // 파싱 실패 시에도 format-section은 계속 표시\n    }\n  }\n  \n  try {\n    fileContent.value = true // 먼저 뷰어를 표시\n    await nextTick()\n    \n    // 스크롤 이벤트 핸들러 등록\n    if (hexView.value) {\n      console.debug('Registering scroll event handler')\n      hexView.value.addEventListener('scroll', handleScroll)\n    }\n    \n    // 초기 데이터 로드\n    await updateVisibleLines()\n  } catch (error) {\n    console.error('파일 로딩 오류:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst readTextFile = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = e => resolve(e.target.result)\n    reader.onerror = reject\n    reader.readAsText(file)\n  })\n}\n\nconst readChunk = (chunk) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = e => resolve(e.target.result)\n    reader.onerror = reject\n    reader.readAsArrayBuffer(chunk)\n    //console.debug('readChunk:', reader.length)\n  })\n}\n\n// const search = () => {\n//   const query = searchText.value.trim()\n//   if (!query || !fileContent.value) return\n  \n//   highlightedBytes.value.clear()\n  \n//   const searchBytes = query\n//     .replace(/\\s+/g, '')\n//     .match(/.{1,2}/g)\n//     ?.map(hex => parseInt(hex, 16))\n  \n//   if (!searchBytes) return\n  \n//   for (let i = 0; i < fileContent.value.length - searchBytes.length + 1; i++) {\n//     if (searchBytes.every((byte, j) => fileContent.value[i + j] === byte)) {\n//       for (let j = 0; j < searchBytes.length; j++) {\n//         highlightedBytes.value.add(i + j)\n//       }\n//     }\n//   }\n// }\n\nconst updateVisibleLines = async () => {\n  if (!selectedFile.value) return\n  \n  const containerHeight = hexView.value?.clientHeight || 0\n  const visibleCount = Math.ceil(containerHeight / LINE_HEIGHT) + 10 // 버퍼 증가\n  const start = Math.max(0, startLine.value - 5)\n  const end = Math.min(totalLines.value, startLine.value + visibleCount + 5)\n  \n  //console.debug('Updating visible lines:', start, '->', end)\n  const lines = await loadLinesRange(start, end)\n  visibleLinesData.value = lines\n}\n\nconst handleScroll = () => {\n  if (!hexView.value || !selectedFile.value) return\n  \n  const newStartLine = Math.floor(hexView.value.scrollTop / LINE_HEIGHT)\n  if (newStartLine !== startLine.value) {\n    startLine.value = newStartLine\n    updateVisibleLines()\n  }\n}\n\nconst selectByte = (index) => {\n  selectedByte.value = selectedByte.value === index ? null : index\n}\n\nconst isSelected = (index) => selectedByte.value === index\n\n// bytesPerLine watch 추가\nwatch(fileFormat, async (newValue) => {\n  if (selectedFile.value && isHexFile.value) {\n    if (newValue === 'hex' && !hexData.value) {\n      isLoading.value = true\n      try {\n        const text = await readTextFile(selectedFile.value)\n        hexData.value = parseIntelHex(text)\n        fileSize.value = formatFileSize(hexData.value.length)\n      } catch (error) {\n        console.error('인텔 헥사 파일 파싱 오류:', error)\n      } finally {\n        isLoading.value = false\n      }\n    }\n    updateVisibleLines()\n  }\n})\n\nwatch(bytesPerLine, (newValue) => {\n  document.documentElement.style.setProperty('--bytes-per-line', newValue.toString())\n  // 바이트 수가 변경되면 보이는 라인을 업데이트\n  updateVisibleLines()\n}, { immediate: true })\n\n// 라이프사이클 훅\nonMounted(() => {\n  console.debug('Component mounted')\n})\n\nonUnmounted(() => {\n  if (hexView.value) {\n    console.debug('Removing scroll event handler')\n    hexView.value.removeEventListener('scroll', handleScroll)\n  }\n})\n</script>\n\n<style scoped>\n.format-section {\n  display: flex;\n  gap: 16px;\n  padding: 8px 12px;\n  background: #f5f1ea;\n  border-radius: 6px;\n  margin-bottom: 8px;\n}\n\n.format-section label {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  cursor: pointer; \n}\n\n.binary-viewer {\n  padding: 20px;\n  height: 100%;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.viewer-container {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  height: calc(100% - 40px);\n}\n\n\n.file-info {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.control-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f5f1ea;\n  padding: 12px;\n  border-radius: 6px;\n}\n\n.file-section {\n  display: flex;\n  justify-content: space-between; /* 좌우 정렬 */\n  align-items: center;\n  width: 100%;\n  margin-bottom: 12px;\n}\n\n.file-input-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.file-export-container {\n  margin-left: auto; /* 오른쪽 정렬 */\n}\n\n.left-controls, .right-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 200px;\n  padding: 6px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.hex-view {\n  flex-grow: 1;\n  overflow-y: scroll;\n  border: 1px solid #e8e1d9;\n  border-radius: 6px;\n  background: #faf7f2;\n  font-family: monospace;\n  position: relative;\n  height: 600px;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.hex-content {\n  position: relative;\n  width: 100%;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.viewport {\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 0;\n  will-change: transform; /* 성능 최적화 */\n}\n\n.hex-line {\n  display: flex;\n  padding: 2px 4px;\n  height: 20px;\n  align-items: center;\n  gap: 12px;\n}\n\n.hex-line:hover {\n  background: rgba(0,0,0,0.03);\n}\n\n.address {\n  color: #6b5b95;\n  width: 80px;\n  flex-shrink: 0;\n  padding-left: 4px;\n  border-right: 1px solid #e8e1d9;\n}\n\n.hex-values {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 18px);\n  gap: 3px;\n  margin-right: 16px;\n  width: calc((18px + 3px) * var(--bytes-per-line, 16) - 3px);\n  padding: 0 8px;\n  border-right: 1px solid #e8e1d9;\n  background: rgba(107, 91, 149, 0.03);\n} \n /* .hex-values {\n  display: grid;\n  grid-template-columns: repeat(var(--bytes-per-line, 16), 18px);\n  gap: 3px;\n  margin-right: 16px;\n  padding: 0 8px;\n  border-right: 1px solid #e8e1d9;\n  background: rgba(107, 91, 149, 0.03);\n}\n\nwatch(bytesPerLine, (newValue) => {\n  document.documentElement.style.setProperty('--bytes-per-line', newValue.toString())\n  // 바이트 수가 변경되면 보이는 라인을 업데이트\n  updateVisibleLines()\n}, { immediate: true }) */\n\n.hex-byte {\n  color: #3c4f76;\n  width: 18px;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n}\n\n.hex-byte:hover {\n  background: rgba(60, 79, 118, 0.1);\n  border-radius: 2px;\n}\n\n.hex-byte.selected,\n.ascii-values span.selected {\n  background: #4a90e2;\n  color: white;\n  border-radius: 2px;\n}\n\n.ascii-values span {\n  user-select: none;\n  cursor: pointer;\n}\n\n.ascii-values span:hover {\n  background: rgba(68, 102, 68, 0.1);\n  border-radius: 2px;\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 4px;\n  background: #eee;\n  border-radius: 2px;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.progress {\n  height: 100%;\n  background: #8b7355;\n  transition: width 0.3s ease;\n}\n\n.primary-btn {\n  background: #8b7355;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.primary-btn:hover {\n  background: #9c8465;\n}\n\n.import-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.import-btn:hover {\n  background-color: #45a049;\n}\n\n.import-btn .material-icons {\n  font-size: 18px;\n}\n\n.export-btn {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  background: #2196F3; /* Material Blue 500 */\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background 0.2s, box-shadow 0.2s;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.export-btn:hover {\n  background: #1976D2; /* Material Blue 700 */\n  box-shadow: 0 3px 6px rgba(0,0,0,0.15);\n}\n\n.export-btn .material-icons {\n  font-size: 18px;\n}\n\n.file-input {\n  display: none;\n}\n\nselect {\n  padding: 4px 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n@media screen and (max-width: 768px) {\n  .binary-viewer {\n    padding: 10px;\n  }\n\n  .hex-line {\n    flex-wrap: wrap;\n    height: auto;\n    padding: 4px 2px;\n    gap: 6px;\n  }\n\n  .address {\n    width: 100%;\n    border-right: none;\n    border-bottom: 1px solid #e8e1d9;\n    padding-bottom: 4px;\n    margin-bottom: 4px;\n    text-align: left;\n  }\n\n  .hex-values {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    gap: 2px;\n    margin-right: 0;\n    padding: 4px 0;\n    border-right: none;\n    border-bottom: 1px solid #e8e1d9;\n    justify-content: flex-start;\n  }\n\n  .hex-byte {\n    width: calc((100% - (2px * (var(--bytes-per-line, 16) - 1))) / var(--bytes-per-line, 16));\n    flex-grow: 1;\n    text-align: center;\n  }\n\n  .ascii-values {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    gap: 2px;\n    justify-content: flex-start;\n  }\n\n  .ascii-values span {\n    width: calc((100% - (2px * (var(--bytes-per-line, 16) - 1))) / var(--bytes-per-line, 16));\n    text-align: center;\n    flex-grow: 1;\n  }\n\n  .hex-view {\n    height: 400px; /* 모바일에서 높이 조정 */\n  }\n\n  .control-section {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n\n  .left-controls, .right-controls {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  select, .search-input {\n    width: 100%;\n  }\n}\n</style>","import script from \"./BinaryViewer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BinaryViewer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BinaryViewer.vue?vue&type=style&index=0&id=000ea67a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-000ea67a\"]])\n\nexport default __exports__","<template>\n    <div class=\"calculator-container\">\n        <div class=\"calculator-card\">\n            <h2>Battery life calculator</h2>\n        \n            <div class=\"input-section\">\n                <div class=\"capacity-section\">\n                    <div class=\"input-field\">\n                        <label>Battery capacity (mAh)</label>\n                        <input type=\"number\" v-model=\"batteryCapacity\" />\n                    </div>\n                </div>          \n    \n                <!-- 구분선 -->\n                <div class=\"divider\"></div>\n                <!-- 전류 및 시간 입력 섹션 -->\n                <div class=\"current-time-section\">\n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Execution Current(mA)</label>\n                            <input type=\"number\" v-model=\"runningCurrent\" />\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Execution time(time)</label>\n                            <input type=\"number\" v-model=\"runningTime\" />\n                        </div>\n                    </div>\n            \n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Idle current(mA)</label>\n                            <input type=\"number\" v-model=\"idleCurrent\" />\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Idle time(time)</label>\n                            <input type=\"number\" v-model=\"idleTime\" />\n                        </div>\n                    </div>\n            \n                    <div class=\"input-group\">\n                        <div class=\"input-field\">\n                            <label>Ready current(mA)</label>\n                            <input type=\"number\" v-model=\"standbyCurrent\" />\n                        </div>\n                        <div class=\"input-field\">\n                            <label>Ready time(time)</label>\n                            <input type=\"number\" v-model=\"standbyTime\" />\n                        </div>\n                    </div>\n                </div>          \n    \n                <button class=\"calculate-btn\" @click=\"calculate\">\n                    <span class=\"material-icons\">calculate</span>\n                    Calculation\n                </button>\n                \n                <div class=\"results\" v-if=\"averageCurrent > 0\">\n                    <div class=\"result-chip\">\n                        Average current consumption: {{ averageCurrent.toFixed(3) }} mA\n                    </div>\n                    <div class=\"result-chip\">\n                        Expected battery life: {{ batteryLife.toFixed(1)}} Hours({{ formattedBatteryLife }})\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n        return {\n            batteryCapacity: 0,\n            runningCurrent: 0,\n            runningTime: 0,\n            idleCurrent: 0,\n            idleTime: 0,\n            standbyCurrent: 0,\n            standbyTime: 0,\n            averageCurrent: 0,\n            batteryLife: 0,\n        };\n    },\n    computed: {\n        formattedBatteryLife() {\n            const days = Math.floor(this.batteryLife / 24);\n            const hours = Math.floor(this.batteryLife % 24);\n            \n            if (days > 0) {\n                return `${days}day ${hours}hour`;\n            }\n            return `${hours}hour`;\n        }\n    },\n    methods: {\n        calculate() {\n            const totalTime = this.runningTime + this.idleTime + this.standbyTime;\n            const averageCurrent =\n            (this.runningCurrent * this.runningTime +\n                this.idleCurrent * this.idleTime +\n                this.standbyCurrent * this.standbyTime) /\n            totalTime;\n            const batteryLife = this.batteryCapacity / averageCurrent;\n            \n            this.averageCurrent = averageCurrent;\n            this.batteryLife = batteryLife;\n        },        \n    },\n  };\n</script>\n  \n<style scoped>\n    .capacity-section {\n        padding: 10px 0;\n    }\n\n    .divider {\n        height: 1px;\n        background-color: #797979;\n        margin: 5px 0 5px 0;\n    }\n\n    .current-time-section {\n        display: flex;\n        flex-direction: column;\n        gap: 30px;\n    }\n\n    .calculator-container {\n        max-width: 800px;\n        margin: 20px auto;\n        padding: 0 20px;\n    }\n    \n    .calculator-card {\n        background: white;\n        border-radius: 8px;\n        padding: 24px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n  \n    h2{\n        margin: 0 0 24px 0;\n        color: #333;\n    }\n    \n    .input-section {\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n    }\n\n    .input-field input {\n        width: 100%;\n        box-sizing: border-box;\n    }\n  \n    .input-group {\n        display: flex;\n        gap: 20px;\n    }\n\n    .input-field {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n    }\n  \n    label {\n        margin-bottom: 8px;\n        color: #666;\n        font-size: 14px;\n    }\n  \n    input {\n        padding: 8px 12px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n  \n    input:focus {\n        outline: none;\n        border-color: #2196F3;\n    }\n  \n    .calculate-btn {\n        background: #2196F3;\n        color: white;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 16px;\n        transition: background 0.3s;\n        align-self: flex-start;\n    }\n  \n    .calculate-btn:hover {\n        background: #1976D2;\n    }\n\n    .calculate-btn .material-icons {\n        font-size: 18px;\n    }\n  \n    .results {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n    }\n  \n    .result-chip {\n        background: #E3F2FD;\n        color: #1976D2;\n        padding: 12px 20px;\n        border-radius: 8px;\n        font-size: 15px;\n        width: fit-content;\n    }\n\n    @media (max-width: 600px) {\n        .input-group {\n            flex-direction: column;\n            gap: 16px;\n    }\n  }\n  </style>\n  ","import { render } from \"./BatteryCalc.vue?vue&type=template&id=7cf4ef1e&scoped=true\"\nimport script from \"./BatteryCalc.vue?vue&type=script&lang=js\"\nexport * from \"./BatteryCalc.vue?vue&type=script&lang=js\"\n\nimport \"./BatteryCalc.vue?vue&type=style&index=0&id=7cf4ef1e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7cf4ef1e\"]])\n\nexport default __exports__","\n<template>\n  <div class=\"changelog\">\n    <h1>Change Log</h1>\n    <div class=\"version-list\">\n      <div v-for=\"(version, index) in versions\" :key=\"index\" class=\"version-item\">\n        <h2>{{ version.version }}</h2>\n        <div class=\"version-date\">{{ version.date }}</div>\n        <ul>\n          <li v-for=\"(change, changeIndex) in version.changes\" \n              :key=\"changeIndex\"\n              :class=\"change.type\">\n            {{ change.description }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChangeLog',\n  data() {\n    return {\n      versions: [\n        {\n          version: 'v0.0.4',\n          date: '2025-03-20',\n          changes: [\n            {\n              type: 'feature',\n              description: 'Added Intel Hexa Convert to Bin feature '\n            },\n            {\n              type: 'improvement',\n              description: 'Image MAP usability improvement',\n            }\n          ]\n        },\n        {\n          version: 'v0.0.3',\n          date: '2025-03-06',\n          changes: [\n            {\n              type: 'feature',\n              description: 'Added IamgeMap feature '\n            }\n          ]\n        },\n        {\n          version: 'v0.0.2',\n          date: '2025-03-06',\n          changes: [\n            {\n              type: 'feature',\n              description: 'Added mobile support and multi-file selection'\n            },\n            {\n              type: 'improvement',\n              description: 'Add responsive code to avoid user frustration on mobile devices ',\n            }\n          ]\n        },\n        {\n          version: 'v0.0.1',\n          date: '2025-02-28',\n          changes: [\n            {\n              type: 'feature',\n              description: 'Initial release'\n            },\n            {\n              type: 'improvement',\n              description: 'Add a new feature to convert images to binary'\n            }\n          ]\n        },\n        // 추가 버전 기록을 여기에 작성\n      ]\n    }\n  }\n}\n</script>\n\n<style scoped>\n.changelog {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.version-item {\n  margin-bottom: 30px;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 20px;\n}\n\n.version-date {\n  color: #666;\n  font-size: 0.9em;\n  margin-bottom: 10px;\n}\n\n.feature {\n  color: #2ecc71;\n}\n\n.improvement {\n  color: #3498db;\n}\n\n.bugfix {\n  color: #e74c3c;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\nli {\n  margin: 8px 0;\n  padding-left: 20px;\n  position: relative;\n}\n\nli::before {\n  content: \"•\";\n  position: absolute;\n  left: 0;\n}\n</style>\n","import { render } from \"./ChangeLog.vue?vue&type=template&id=3f38a17c&scoped=true\"\nimport script from \"./ChangeLog.vue?vue&type=script&lang=js\"\nexport * from \"./ChangeLog.vue?vue&type=script&lang=js\"\n\nimport \"./ChangeLog.vue?vue&type=style&index=0&id=3f38a17c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3f38a17c\"]])\n\nexport default __exports__","//import { createRouter, createWebHistory } from 'vue-router'\nimport { createRouter, createWebHashHistory } from 'vue-router'\nimport ImageConverter from '@/components/ImageConverter.vue'\nimport ImageMap from '@/components/ImageMap.vue'\nimport BinaryViewer from '@/components/BinaryViewer.vue'\nimport BatteryCalc from '@/components/BatteryCalc.vue'\nimport ChangeLog from '@/components/ChangeLog.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'ImageConverter',\n    component: ImageConverter\n  },\n  {\n    path: '/image-map',\n    name: 'ImageMap',\n    component: ImageMap\n  },\n  {\n    path: '/binary-viewer',\n    name: 'BinaryViewer',\n    component: BinaryViewer\n  },\n  {\n    path: '/battery-calc',\n    name: 'BatteryCalc',\n    component: BatteryCalc\n  },\n  {\n    path: '/change-logs',\n    name: 'ChangeLog',\n    component: ChangeLog\n  }\n]\n\nconst router = createRouter({\n  // history: createWebHistory(process.env.BASE_URL),\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router ","\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport VueGtag from 'vue-gtag';\n\nconst app = createApp(App);\n\napp.use(VueGtag, {\n  config: { id: 'G-DGQYPE2G1E' }\n}, router);\n\napp.use(router).mount('#app');\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknovatool_claude\"] = self[\"webpackChunknovatool_claude\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(146); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_Fragment","_createElementVNode","href","rel","_hoisted_1","_hoisted_2","_hoisted_3","src","_imports_0","alt","onClick","_cache","args","$options","toggleMobileMenu","_normalizeClass","$data","isMobileMenuOpen","_createVNode","_component_router_link","to","closeMobileMenu","default","_withCtx","_createTextVNode","_","_hoisted_4","_component_router_view","style","name","data","methods","this","__exports__","render","key","type","accept","onChange","onFilesSelected","ref","multiple","$event","_ctx","$refs","fileInput","click","selectedFiles","length","_hoisted_5","_toDisplayString","_renderList","file","index","loadImagePreview","_hoisted_7","_hoisted_8","_hoisted_9","formatFileSize","size","_hoisted_6","_createCommentVNode","imagePreview","_hoisted_10","_hoisted_11","_hoisted_12","objectFit","_hoisted_13","_hoisted_14","imageWidth","imageHeight","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","format","_createStaticVNode","_hoisted_20","getLegendClass","getChannelOrder","channel","_normalizeStyle","getChannelStyle","_hoisted_21","getFormatDescription","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","outputType","value","_hoisted_26","_hoisted_27","_hoisted_28","zipOutput","convertAllImages","disabled","isConverting","_hoisted_29","conversions","_hoisted_30","_hoisted_31","result","_hoisted_32","fileName","compressionRatio","created","document","title","$route","computed","split","toLowerCase","includes","startsWith","toUpperCase","event","files","target","splice","Array","from","reader","FileReader","onload","e","loadImageDimensions","readAsDataURL","img","Image","width","height","$gtag","event_category","event_label","processFile","convertAndZip","error","console","alert","JSZip","zip","folder","convertFile","push","toFixed","generateCCode","content","generateAsync","url","URL","createObjectURL","a","createElement","download","body","appendChild","removeChild","revokeObjectURL","downloadBinary","downloadCArray","Promise","resolve","canvas","ctx","getContext","drawImage","imageData","getImageData","endsWith","convertTo8888Format","convertTo4444Format","convertTo565Format","originalSize","getBaseFileName","slice","join","Uint8Array","i","r","g","b","pixelOffset","Math","floor","pixel16bit","blob","Blob","originalFileName","cCode","dataLength","safeFileName","getSafeVariableName","bytesPerLine","j","toString","padStart","replace","styles","background","color","textShadow","borderLeft","borderRight","importAreaInfo","imagePath","webkitdirectory","directory","importImages","handleImageUpload","selectedImage","isEditing","BGName","useMap","onLoad","initializeCanvas","handleImageClick","onMousedown","_withModifiers","startDrawing","onMousemove","drawing","onMouseup","endDrawing","draggable","areas","area","id","shape","coords","onMouseover","highlightArea","onMouseout","removeHighlight","getAreaBackgroundStyle","imageUrl","visible","handleCanvasClick","cursor","selectedAreaId","getAreaNumberStyle","placeholder","isEditingArea","getAreaCoords","x","onInput","updateCoord","number","y","handleAreaImageUpload","areaFilenames","toggleVisibility","_hoisted_33","deleteArea","_hoisted_34","_hoisted_35","exportAsJson","exportAsCStruct","isDrawing","startX","startY","currentArea","editingAreaId","isDragging","dragStartX","dragStartY","BGSize","areaId","find","drawSavedAreas","rect","getBoundingClientRect","scale","clientWidth","clientX","left","clientY","top","clickedArea","x1","y1","x2","y2","map","Number","selectArea","classList","contains","imageMap","forEach","async","importFromJson","importFromCStruct","readAsText","clearAllAreas","JSON","parse","areasData","isArray","Error","item","coordinates","undefined","filter","filename","$nextTick","highlightCanvas","message","imagePathMatch","match","BGNameMatch","areaRegex","exec","parseInt","log","exportData","stringify","downloadFile","structContent","link","position","overflow","triggerFileInput","bytes","units","unitIndex","$emit","toggleEditMode","clearRect","num","round","strokeStyle","lineWidth","setLineDash","strokeRect","naturalWidth","currentX","currentY","fillStyle","fillRect","endX","endY","abs","newArea","min","toggleEdit","isNaN","CHUNK_SIZE","LINE_HEIGHT","CACHE_SIZE","hexView","fileContent","fileSize","isLoading","progress","showAscii","highlightedBytes","Set","startLine","selectedFile","chunksCache","Map","visibleLinesData","selectedByte","fileFormat","hexData","isHexFile","visibleLines","totalLines","fullLines","hasRemainder","totalHeight","scrollOffset","max","formatAddress","offset","formatByte","byte","toAscii","String","fromCharCode","isHighlighted","has","parseIntelHex","text","lines","line","trim","memory","maxAddress","baseAddress","byteCount","substr","address","recordType","absoluteAddress","exportBinary","originalName","baseName","setTimeout","loadLinesRange","start","end","remainingBytes","lineLength","startOffset","endOffset","ensureChunksLoaded","lastLine","getBytes","getChunkKey","startChunk","endChunk","loadChunk","getCacheSize","oldestKey","keys","next","delete","chunk","values","buffer","readChunk","set","chunkOffset","get","fill","relativeOffset","onFileSelect","clear","readTextFile","nextTick","debug","addEventListener","handleScroll","updateVisibleLines","reject","onerror","readAsArrayBuffer","containerHeight","clientHeight","visibleCount","ceil","newStartLine","scrollTop","selectByte","isSelected","watch","newValue","documentElement","setProperty","immediate","onMounted","onUnmounted","removeEventListener","batteryCapacity","runningCurrent","runningTime","idleCurrent","idleTime","standbyCurrent","standbyTime","calculate","averageCurrent","batteryLife","formattedBatteryLife","days","hours","totalTime","versions","version","date","changes","change","changeIndex","description","routes","path","component","ImageConverter","ImageMap","BinaryViewer","BatteryCalc","ChangeLog","router","createRouter","history","createWebHashHistory","app","createApp","App","use","VueGtag","config","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","every","n","getter","__esModule","d","definition","o","defineProperty","enumerable","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}